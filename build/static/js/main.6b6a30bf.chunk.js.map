{"version":3,"sources":["config.js","PlaylistContext.js","Landingpage/Landing.js","Homepage/GenreCheck.js","ValidationError.js","Homepage/Homepage.js","Playlists/Song.js","Nav.js","Playlists/Playlist.js","playStore.js","songStore.js","Playlists/Playlist-Display.js","Playlists/Playlister.js","Playlists/Existing-playlists.js","genreStore.js","App.js","index.js"],"names":["require","config","module","exports","ENDPOINT","PlaylistContext","React","createContext","genres","playlists","pageUpdate","Landing","id","to","Component","genreChecks","props","toggleClick","e","clickE","state","name","this","selected","key","className","htmlFor","checked","selectedGen","type","value","ValidationError","message","console","log","HomePage","_isMounted","fieldChange","setState","selectedId","target","titleChange","title","titleTouch","minChange","min","parseInt","minTouch","hourChange","hour","hourTouch","minArr","arr","Array","i","hourArr","validateTime","hourSelect","minSelect","isNaN","validateGenre","validateTitle","titleInput","trim","length","subHandle","preventDefault","time","newPlaylist","genre_id","author","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","history","push","catch","error","genTouch","Consumer","map","genre","minutes","hours","timeError","genreError","titleError","onChange","onClick","disabled","Song","timeOut","Math","floor","sec","toFixed","msConverter","track","href","url","Nav","playlistOut","slice","reverse","playlist","find","exact","output","songDisplay","songs","song","explicit","PlaylistDisplay","setPlaylistId","playlistId","setPlaylist","addSongs","mounter","match","params","isFlushed","playStore","runtime","songStore","nextProps","Playlister","ExistingPlaylist","lister","App","user","setGenres","setPlaylists","fetcher","contextValue","genreStore","Provider","path","component","Homepage","ExistingPlaylists","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b6a30bf.chunk.js","sourcesContent":["require('dotenv').config()\nmodule.exports = {\n    ENDPOINT: \"http://localhost:8000/api\"\n}","import React from 'react'\nconst PlaylistContext = React.createContext({\n    genres: [],\n    playlists: [],\n    pageUpdate: () => { },\n})\nexport default PlaylistContext\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n// import PlaylistContext from '../PlaylistContext'\nimport './Landing.css'\n\n\nexport default class Landing extends Component {\n\n    render() {\n        return (\n            <div id=\"user-prompt\">\n                <h2>Welcome to playlist maker</h2>\n                <p>Looking to discover new music? Tired of your old study playlist? This app is for you just choose the genres and input the amount of time you would like the playlist to run and wait for your new playlist to be created.</p>\n                <Link to={'/homepage'}>Create a Playlist!</Link>\n                <Link to={'/existing-playlists'}>See existing playlists</Link>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class genreChecks extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: props.id,\n            name: props.name,\n        }\n    }\n\n    toggleClick = (e) => {\n        this.props.clickE(e, this.state.name)\n    }\n\n    render() {\n\n        if (this.props.selected === this.state.name)\n            return (\n                <label key={this.state.id} name={this.state.name} className=\"genre-option gen-selected\" htmlFor={this.state.id} checked={this.state.selectedGen === this.state.name}>\n                    {this.state.name}\n\n                    <input type=\"radio\" value={this.state.name} name=\"gen-option\" id={this.state.id} />\n                </label>\n            )\n\n        else\n            return (\n\n                <label key={this.state.id} name={this.state.name} className=\"genre-option\" htmlFor={this.state.id} checked={this.state.selectedGen === this.state.name}>\n                    {this.state.name}\n\n                    <input type=\"radio\" value={this.state.name} name=\"gen-option\" id={this.state.id} />\n                </label>\n                // </div>\n            )\n\n    }\n}","import React from 'react';\n\nexport default function ValidationError(props) {\n    if (props.message) {\n        console.log(props.message)\n        return (\n            <div className=\"error\">{props.message}</div>\n        );\n    }\n\n    return <></>\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PlaylistContext from '../PlaylistContext'\nimport './Homepage.css'\nimport GenreCheck from './GenreCheck'\nimport ValidationError from '../ValidationError'\nimport config from '../config'\n\n\nexport default class HomePage extends Component {\n    _isMounted = false;\n    constructor(props) {\n        super(props)\n        this.state = {\n            title: \"\",\n            titleTouch: false,\n            selectedId: null,\n            selectedGen: null,\n            genTouch: false,\n            hour: null,\n            hourTouch: false,\n            min: null,\n            minTouch: false,\n        }\n    }\n\n    fieldChange = e => {\n\n        this.setState({\n            selectedId: e.target.id,\n            selectedGen: e.target.value\n        })\n    }\n\n    titleChange = e => {\n        this.setState({\n            title: e.target.value,\n            titleTouch: true\n        })\n    }\n\n    minChange = e => {\n        this.setState({\n            min: parseInt(e.target.value),\n            minTouch: true\n        })\n    }\n\n    hourChange = e => {\n        this.setState({\n            hour: parseInt(e.target.value),\n            hourTouch: true\n        })\n    }\n\n    minArr = () => {\n        let arr = new Array(60);\n        for (let i = 0; i <= 59; i++)\n            arr[i] = i\n\n        return arr\n    }\n\n    hourArr = () => {\n        let arr = new Array(4);\n        for (let i = 0; i <= 2; i++)\n            arr[i] = i\n        return arr\n    }\n\n    validateTime = () => {\n        const hourSelect = this.state.hour\n        const minSelect = this.state.min\n        if ((hourSelect === null) || (minSelect === null) || isNaN(hourSelect) || isNaN(minSelect) || (hourSelect === 0 && minSelect === 0))\n            return \"Select a valid time\"\n    }\n\n    validateGenre = () => {\n        const genre = this.state.selectedId\n        if (genre === null)\n            return \"You must select a genre.\"\n        // if (genres.length > 1)\n        //     return \"Sorry only one genre can be selected at a time.\"\n    }\n\n    validateTitle = () => {\n        const titleInput = this.state.title.trim()\n        if (titleInput.length === 0) {\n            return \"Title is required.\"\n        } else if (titleInput.length < 3) {\n            return \"Title must be atleast 3 characters long.\"\n        }\n    }\n\n    subHandle = (e, value) => {\n        e.preventDefault();\n        let time = (3600000 * this.state.hour) + (60000 * this.state.min)\n        let newPlaylist = {\n            title: this.state.title.trim(),\n            length: time,\n            genre_id: this.state.selectedId,\n            author: 1\n        }\n\n\n        fetch(`${config.ENDPOINT}/playlists`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(newPlaylist),\n        })\n            .then(res => {\n                if (!res.ok)\n                    return res.json().then(e => Promise.reject(e))\n                return res.json()\n            })\n            .then(res => {\n\n                value.pageUpdate()\n                this.props.history.push(`/playlist-display/${res.id}`,\n                    {\n                        genres: value.genres,\n                        time: time\n                    }\n                )\n            })\n            .catch(error => {\n                console.error({ error })\n            })\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    render() {\n\n        return (\n            <PlaylistContext.Consumer>\n                {(value) => {\n\n                    let genres = value.genres.map(genre =>\n                        <GenreCheck id={genre.id} name={genre.name} selected={this.state.selectedGen} key={genre.id} />\n                    )\n\n                    let minutes = this.minArr().map(min => {\n                        if (min < 10)\n                            return <option value={min} key={min}>0{min}</option>\n                        else\n                            return <option value={min} key={min}>{min}</option>\n                    })\n\n                    let hours = this.hourArr().map(min => {\n                        return <option value={min} key={min}>{min}</option>\n                    })\n\n                    const timeError = this.validateTime()\n                    const genreError = this.validateGenre()\n                    const titleError = this.validateTitle()\n\n                    return genres && (\n                        <div id=\"play-stage\">\n                            <form>\n                                <div id=\"input-wrap\">\n                                    <div className=\"inputs\">\n                                        <label htmlFor=\"title-input\">Playlist Name: </label>\n                                        <input type=\"text\" id=\"title-input\" onChange={this.titleChange} className=\"user-inputs\" />\n                                        {this.state.titleTouch && <ValidationError message={titleError} />}\n                                    </div>\n                                    <div className=\"inputs\">\n                                        <label htmlFor=\"hour-length\">Playlist length: </label>\n                                        <select onChange={this.hourChange} className=\"user-inputs\">\n                                            <option value={null}>--Hour(s)--</option>\n                                            {hours}\n                                        </select>\n                                    :\n                                    <select onChange={this.minChange} className=\"user-inputs\">\n                                            <option value={null}>--Minute(s)--</option>\n                                            {minutes}\n                                        </select>\n                                        {(this.state.hourTouch && this.state.minTouch) && <ValidationError message={timeError} />}\n                                    </div>\n                                </div>\n                                <fieldset onChange={this.fieldChange}>\n                                    <legend>Choose your genre!</legend>\n                                    {(this.state.genTouch && <ValidationError message={genreError} />)}\n                                    <div id=\"genres\">\n                                        {genres}\n                                    </div>\n                                </fieldset>\n                                <button type=\"submit\" id=\"create\" onClick={e => this.subHandle(e, value)} disabled={timeError || genreError || titleError}>Create your playlist!</button>\n                            </form>\n                            <Link to={'/playlist-display/3'} >Here</Link>\n                        </div>\n                    )\n                }\n                }\n            </PlaylistContext.Consumer >\n\n        )\n    }\n}","import React from 'react'\nimport './Song.css'\nimport { Link } from 'react-router-dom'\nimport PlaylistContext from '../PlaylistContext'\nimport PropTypes from 'prop-types'\nimport config from '../config'\n\nexport default function Song(props) {\n    // let date = <Moment format=\"Do of MMM YYYY\">\n    //     {props.mod}\n    // </Moment>\n\n    // let handleClickDelete = (value) => {\n    //     const noteId = props.id\n    //     fetch(`${config.note_end}/${noteId}`, {\n    //         method: 'DELETE',\n    //         headers: {\n    //             'content-type': 'application/json'\n    //         },\n    //     })\n    //         .then(res => {\n    //             if (!res.ok)\n    //                 return res.json().then(e => Promise.reject(e))\n    //             // return res.json()\n    //         })\n    //         .then(() => {\n    //             value.deleteNote(noteId)\n    //         })\n    //         .catch(error => {\n    //             console.error({ error })\n    //         })\n\n    //     if (props.history)\n    //         props.history.push('/')\n    // }\n\n    let msConverter = (length) => {\n        var min = Math.floor(length / 60000);\n        var sec = ((length % 60000) / 1000).toFixed(0);\n        return min + \":\" + (sec < 10 ? '0' : '') + sec;\n    }\n\n    let timeOut = msConverter(props.track.length)\n    // let artistOut = props.track.artist.join(', ')\n    return (\n        // <NoteContext.Consumer>\n        // {(value) => {\n        // return (\n        <a target='_blank' href={props.track.url}>\n            <div className=\"song-item\">\n                {/* <Link to={} className=\"title\"> */}\n\n                <h3>{props.track.title}</h3>\n\n                {/* <span className=\"artist\">by: {artistOut}</span> */}\n                <span id=\"time\">{timeOut}</span>\n                {/* </Link> */}\n                {/* <p>{\"Date modified on \"}{date}</p> */}\n                {/* <button className=\"delete\" onClick={() => handleClickDelete(value)}>Delete Note</button> */}\n\n                <hr />\n            </div>\n\n        </a>\n        // )\n        // }\n        // }\n        // </NoteContext.Consumer>\n    )\n}\n\n// Note.propTypes = {\n//     id: PropTypes.number,\n//     name: PropTypes.string,\n//     content: PropTypes.string,\n//     mod: PropTypes.string,\n// } \n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport './Nav.css'\nimport PropTypes from 'prop-types'\nimport PlaylistContext from './PlaylistContext'\nimport PlaylistDisplay from './Playlists/Playlist-Display'\n\nexport default function Nav(props) {\n    // console.log(props)\n\n    let output = (value) => {\n        // console.log(value)\n\n\n\n        return value.playlists.slice(value.playlists.length - 11, value.playlists.length - 1).reverse().map(playlist => {\n            let genre = value.genres.find(genre => {\n                return genre.id === playlist.genre_id\n            })\n\n            return genre && (\n                <Link exact=\"true\" key={playlist.id} to={`/playlist-display/${playlist.id}`}>\n                    <article className=\"navLink\">\n                        <h3 id={playlist.id} >{playlist.title}</h3>\n                        <span>Genre:{genre.name}</span>\n                    </article>\n                </Link>\n            )\n        })\n    };\n\n\n    return (\n        <PlaylistContext.Consumer>\n            {(value) => {\n                let playlistOut = output(value)\n                return playlistOut && (\n                    <div id=\"navBar\">\n                        <h2 id=\"recent\">Most Recent</h2>\n                        {playlistOut}\n                        <Link to={'/homepage'}  >\n                            <h3 className=\"addFolder\">Add folder</h3>\n                        </Link>\n                    </div>\n                )\n\n            }\n            }\n        </PlaylistContext.Consumer>\n\n    )\n}\n","import React from 'react'\n// import './playlist.css'\n// import Moment from 'react-moment'\nimport { Link } from 'react-router-dom'\nimport PlaylistContext from '../PlaylistContext'\nimport PropTypes from 'prop-types'\nimport config from '../config'\nimport Song from './Song'\nimport Nav from '../Nav'\n\nexport default function playlist(props) {\n    // let date = <Moment format=\"Do of MMM YYYY\">\n    //     {props.mod}\n    // </Moment>\n    console.log(props)\n    // let handleClickDelete = (value) => {\n    //     const playlistId = props.id\n    //     fetch(`${config.playlist_end}/${playlistId}`, {\n    //         method: 'DELETE',\n    //         headers: {\n    //             'content-type': 'application/json'\n    //         },\n    //     })\n    //         .then(res => {\n    //             if (!res.ok)\n    //                 return res.json().then(e => Promise.reject(e))\n    //             // return res.json()\n    //         })\n    //         .then(() => {\n    //             value.deletePlaylist(playlistId)\n    //         })\n    //         .catch(error => {\n    //             console.error({ error })\n    //         })\n\n    //     if (props.history)\n    //         props.history.push('/')\n    // }\n\n    // return (\n    //     <PlaylistContext.Consumer>\n    //         {(value) => {\n\n    let songDisplay = props.songs.map(song => {\n        return <Song track={song} key={song.id} />\n    })\n\n    return (\n        <div id=\"playlistDisplay\">\n            <div id=\"nav\">\n                <Nav />\n            </div>\n            <div id=\"playlistContent\">\n\n                <h2 id=\"playlist-title\">{props.playlist.name}</h2>\n                {songDisplay}\n\n                {/* <NoteError> */}\n                {/* <Note id={output.id} name={output.name} content={output.content} mod={output.modified} key={output.id} history={this.props.history} /> */}\n                {/* <p></p> */}\n                {/* </NoteError> */}\n                {/* </article> */}\n            </div>\n\n        </div>\n    )\n}\n    //         }\n    //     </PlaylistContext.Consumer>\n    // )\n// }\n\n// playlist.propTypes = {\n//     id: PropTypes.number,\n//     name: PropTypes.string,\n//     content: PropTypes.string,\n//     mod: PropTypes.string,\n// } \n","export default [\n    {\n        id: 1,\n        name: \"Acoustic Test One\",\n        genre_id: 1,\n        length: \"1860000\"\n\n    },\n    {\n        id: 2,\n        name: \"Acoustic Test Two\",\n        genre_id: 1,\n        length: \"1560230\"\n\n    }\n]","export default [\n    { id: \"29ENMAdmNy0byJdF21AhGa\", url: \"https://open.spotify.com/track/29ENMAdmNy0byJdF21AhGa\", title: \"Watermelon\", length: 198226, explicit: true },\n    { id: \"6FEDEeBd8E5T1TmBfMlys0\", url: \"https://open.spotify.com/track/6FEDEeBd8E5T1TmBfMlys0\", title: \"SEND THE RAIN (TO EVERYONE)\", length: 322101, explicit: false },\n    { id: \"279Iabhr2afcc93hAc1YZ8\", url: \"https://open.spotify.com/track/279Iabhr2afcc93hAc1YZ8\", title: \"Black Dog\", length: 82026, explicit: false },\n    { id: \"65D1Gw34nZZpjfcZPmOBwY\", url: \"https://open.spotify.com/track/65D1Gw34nZZpjfcZPmOBwY\", title: \"Oh My Stars\", length: 302120, explicit: false },\n    { id: \"1MQwg2JTIHjdsOHUR6bdso\", url: \"https://open.spotify.com/track/1MQwg2JTIHjdsOHUR6bdso\", title: \"I Need To Know\", length: 214280, explicit: false },\n    { id: \"14bJJQStOzZpcCxlAr4NOz\", url: \"https://open.spotify.com/track/14bJJQStOzZpcCxlAr4NOz\", title: \"Safe & Sound\", length: 178329, explicit: false },\n    { id: \"4c1Lc5RsgYURf7hZlt4sR0\", url: \"https://open.spotify.com/track/4c1Lc5RsgYURf7hZlt4sR0\", title: \"That Kind Of Beautiful\", length: 185190, explicit: false },\n    { id: \"2poCGYnBEGRXQ4q9F889CS\", url: \"https://open.spotify.com/track/2poCGYnBEGRXQ4q9F889CS\", title: \"Darlin'\", length: 233520, explicit: false },\n    { id: \"56twDecxsQon61crfEXrA5\", url: \"https://open.spotify.com/track/56twDecxsQon61crfEXrA5\", title: \"Hollywood's Bleeding\", length: 217777, explicit: false },\n    { id: \"75Vc1ge16jlwRmEGCqCc6l\", url: \"https://open.spotify.com/track/75Vc1ge16jlwRmEGCqCc6l\", title: \"Oh, Carolina\", length: 205666, explicit: false },\n    { id: \"0tozhA4AZE7kDEvlcxCzP1\", url: \"https://open.spotify.com/track/0tozhA4AZE7kDEvlcxCzP1\", title: \"Undertow\", length: 282453, explicit: false },\n    { id: \"7KyzYTcqtptWqlmEZAVPZV\", url: \"https://open.spotify.com/track/7KyzYTcqtptWqlmEZAVPZV\", title: \"From Here to Utopia\", length: 354000, explicit: true },\n    { id: \"7Jt2m2zXpCkAdmUIfsIaWZ\", url: \"https://open.spotify.com/track/7Jt2m2zXpCkAdmUIfsIaWZ\", title: \"Whiskey in the Jar\", length: 267653, explicit: false },\n    { id: \"3q7vmOvgX1DZIILnGRmAHM\", url: \"https://open.spotify.com/track/3q7vmOvgX1DZIILnGRmAHM\", title: \"Only the Wine\", length: 172240, explicit: false },\n    { id: \"4fHJwyR7JILiSAbLyXcrKx\", url: \"https://open.spotify.com/track/4fHJwyR7JILiSAbLyXcrKx\", title: \"Don't Wanna Know - Acoustic Version\", length: 183472, explicit: false },\n    { id: \"4UU97IGHOhBhZjCUgDFUiz\", url: \"https://open.spotify.com/track/4UU97IGHOhBhZjCUgDFUiz\", title: \"Sink Or Swim\", length: 178093, explicit: false },\n    { id: \"30JxjencOWOx1F5m1FDvz6\", url: \"https://open.spotify.com/track/30JxjencOWOx1F5m1FDvz6\", title: \"Don't Keep Heaven Busy\", length: 214153, explicit: false },\n    { id: \"1RIrP4WjP5k2yYDxWzCJdz\", url: \"https://open.spotify.com/track/1RIrP4WjP5k2yYDxWzCJdz\", title: \"Swelling Sea\", length: 246164, explicit: false },\n    { id: \"3xQMRlwBgqvYWJX8TsOOgq\", url: \"https://open.spotify.com/track/3xQMRlwBgqvYWJX8TsOOgq\", title: \"Who Saved Who\", length: 245840, explicit: false },\n    { id: \"5aAwAb26epRhjJvgoE1qCv\", url: \"https://open.spotify.com/track/5aAwAb26epRhjJvgoE1qCv\", title: \"Terrifyer\", length: 148547, explicit: false },\n    { id: \"2vOFdBs2kss9U0ezRGTG2E\", url: \"https://open.spotify.com/track/2vOFdBs2kss9U0ezRGTG2E\", title: \"Remnants of What People Used to Be\", length: 175046, explicit: true },\n    { id: \"12Dk1SYhyl5dmqb2BllDnD\", url: \"https://open.spotify.com/track/12Dk1SYhyl5dmqb2BllDnD\", title: \"Someone Like You // Acoustic\", length: 221053, explicit: false },\n    { id: \"2DODPLqY24UuvUokVh2JwF\", url: \"https://open.spotify.com/track/2DODPLqY24UuvUokVh2JwF\", title: \"That's All I Need\", length: 198466, explicit: false },\n    { id: \"4KgWwGrhtccvKkVq5LuY8a\", url: \"https://open.spotify.com/track/4KgWwGrhtccvKkVq5LuY8a\", title: \"Come Back Down\", length: 228346, explicit: false },\n    { id: \"6Of87Sf8b20V1uj7VjeIvl\", url: \"https://open.spotify.com/track/6Of87Sf8b20V1uj7VjeIvl\", title: \"Let the Night\", length: 238093, explicit: false },\n    { id: \"11qJo8BHxYDUg6NSVZp95i\", url: \"https://open.spotify.com/track/11qJo8BHxYDUg6NSVZp95i\", title: \"Girls Just Wanna Have Fun\", length: 172992, explicit: false },\n    { id: \"2P8TddBcto4SMPB0G9dSAB\", url: \"https://open.spotify.com/track/2P8TddBcto4SMPB0G9dSAB\", title: \"Stealing\", length: 257160, explicit: false },\n    { id: \"08oOVFb31KlJ8avWFTtHE0\", url: \"https://open.spotify.com/track/08oOVFb31KlJ8avWFTtHE0\", title: \"My Heart With You\", length: 264240, explicit: false },\n    { id: \"0dJDvqSaf1kQEbUXbgsagt\", url: \"https://open.spotify.com/track/0dJDvqSaf1kQEbUXbgsagt\", title: \"Asking for a Friend\", length: 235866, explicit: false },\n    { id: \"3CC3toUI04aaz6qH1OpjcI\", url: \"https://open.spotify.com/track/3CC3toUI04aaz6qH1OpjcI\", title: \"I Remember Her\", length: 209539, explicit: false },\n    { id: \"4kp526fUmPUCdru1PAeNUV\", url: \"https://open.spotify.com/track/4kp526fUmPUCdru1PAeNUV\", title: \"鬼ヶ島\", length: 154760, explicit: false },\n    { id: \"53T8DzkT63oDhUXSQJVul7\", url: \"https://open.spotify.com/track/53T8DzkT63oDhUXSQJVul7\", title: \"American Tune\", length: 147120, explicit: false },\n    { id: \"2WaxBL2VVPUHqtfQE1yLbF\", url: \"https://open.spotify.com/track/2WaxBL2VVPUHqtfQE1yLbF\", title: \"Midnight Special - Remastered 2002\", length: 185520, explicit: false },\n    { id: \"1bpCYUzfZTLdAknuel5Cnt\", url: \"https://open.spotify.com/track/1bpCYUzfZTLdAknuel5Cnt\", title: \"I Dream of You\", length: 258056, explicit: false },\n    { id: \"1NxQeMVFB5VZ1vQEk4lNvd\", url: \"https://open.spotify.com/track/1NxQeMVFB5VZ1vQEk4lNvd\", title: \"Little Lies\", length: 167706, explicit: false },\n    { id: \"0pvZsVZ95F6C6oSGTBCfLH\", url: \"https://open.spotify.com/track/0pvZsVZ95F6C6oSGTBCfLH\", title: \"El Camino\", length: 242146, explicit: false },\n    { id: \"5KvvHQR3xGNZN7aq0CMjf6\", url: \"https://open.spotify.com/track/5KvvHQR3xGNZN7aq0CMjf6\", title: \"Come Home\", length: 291833, explicit: false },\n    { id: \"0Pi3Ua6fJV1Yx5MGXhfybT\", url: \"https://open.spotify.com/track/0Pi3Ua6fJV1Yx5MGXhfybT\", title: \"Call You Mine (Acoustic Piano)\", length: 209554, explicit: false },\n    { id: \"3ehaORXQ7WPWY62TU9tJct\", url: \"https://open.spotify.com/track/3ehaORXQ7WPWY62TU9tJct\", title: \"Cody's Theme\", length: 123576, explicit: false },\n    { id: \"0Z2Q9i0qg8zKtK1rL5tFSu\", url: \"https://open.spotify.com/track/0Z2Q9i0qg8zKtK1rL5tFSu\", title: \"Blazing Highway Home\", length: 298760, explicit: false },\n    { id: \"6nkiE9nZdyxQ6KtEb1uJq8\", url: \"https://open.spotify.com/track/6nkiE9nZdyxQ6KtEb1uJq8\", title: \"Details\", length: 229224, explicit: false },\n    { id: \"7Jfj7U9W5Ws3k1Xh34RZ6W\", url: \"https://open.spotify.com/track/7Jfj7U9W5Ws3k1Xh34RZ6W\", title: \"Robin Williams\", length: 181573, explicit: false },\n    { id: \"1WGMajtK2qQXuzGmAlRSTH\", url: \"https://open.spotify.com/track/1WGMajtK2qQXuzGmAlRSTH\", title: \"Nel Blu Dipinto Di Blu\", length: 227238, explicit: false },\n    { id: \"6i6Wi5CAYZUFiQr4dP2QPm\", url: \"https://open.spotify.com/track/6i6Wi5CAYZUFiQr4dP2QPm\", title: \"To the Dogs or Whoever\", length: 182946, explicit: false },\n    { id: \"6PbCEdjkgbUTDwyrJNn3Dm\", url: \"https://open.spotify.com/track/6PbCEdjkgbUTDwyrJNn3Dm\", title: \"The World Keeps Turnin'\", length: 189026, explicit: false },\n    { id: \"1uejMUEJpPMmTA640NJXcu\", url: \"https://open.spotify.com/track/1uejMUEJpPMmTA640NJXcu\", title: \"Pilgrim\", length: 235992, explicit: false },\n    { id: \"7C87cnbE6D7NiW0HHJlKn1\", url: \"https://open.spotify.com/track/7C87cnbE6D7NiW0HHJlKn1\", title: \"Lavender\", length: 265760, explicit: false },\n    { id: \"5TJ025YL3gsi9c375RVmZy\", url: \"https://open.spotify.com/track/5TJ025YL3gsi9c375RVmZy\", title: \"Killing Me\", length: 261320, explicit: false },\n    { id: \"6ogPBjEg8SeRrPQXpGQZvf\", url: \"https://open.spotify.com/track/6ogPBjEg8SeRrPQXpGQZvf\", title: \"Life Keeps Moving On\", length: 196559, explicit: false },\n    { id: \"4hbGPfz03P8Nnh75mFIAoH\", url: \"https://open.spotify.com/track/4hbGPfz03P8Nnh75mFIAoH\", title: \"Lucky - Spotify Session\", length: 391404, explicit: false }\n]","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport PlaylistContext from '../PlaylistContext'\nimport config from '../config'\nimport Song from './Song'\nimport Nav from '../Nav'\nimport Playlist from './Playlist'\nimport './Playlist-Display.css'\nimport playStore from '../playStore'\nimport songStore from '../songStore'\n// import './Landing.css'\n\n\nexport default class PlaylistDisplay extends Component {\n    _isMounted = false;\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            playlistId: this.props.match.params.playlistId,\n            playlist: null,\n            songs: [],\n            isFlushed: false\n        }\n        console.log(this.state.songs)\n    }\n\n    setPlaylistId = (playlistId) => {\n        this.setState({ playlistId })\n    }\n\n    setPlaylist = (playlist) => {\n        this.setState({ playlist })\n    }\n\n    addSongs = (song) => {\n        this.setState({\n            songs: [...this.state.songs, song]\n        })\n        console.log(this.state.songs)\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        let playlistId = this.props.match.params.playlistId\n        console.log(playlistId)\n\n        let playlist = playStore.find(playlist => {\n            console.log(playlist)\n            return playlist.id == this.props.match.params.playlistId\n        })\n\n        this.setPlaylist(playlist)\n\n\n        let runtime = 0\n        let chosen = []\n        let i = 0;\n\n        while (runtime < playlist.length) {\n\n            // let trackChoice = Math.floor(Math.random() * 50);\n\n            // if (!chosen.includes(trackChoice)) {\n            //     chosen.push(trackChoice)\n            // let artists = []\n            // for (let i = 0; i < songStore[trackChoice].artists.length; i++)\n            //     artists.push(songStore[trackChoice].artists[i].name)\n\n            let song = {\n                id: songStore[i].id,\n                url: songStore[i].url,\n                name: songStore[i].name,\n                length: songStore[i].length,\n                explicit: songStore[i].explicit,\n\n            }\n            i++;\n            // console.log(song)\n            runtime += song.length\n            this.addSongs(song)\n\n            // }\n        }\n\n\n\n\n\n\n\n\n\n\n\n        // if (this._isMounted) {\n        //     fetch(config.ENDPOINT + `/playlists/${playlistId}`,\n        //         {\n        //             method: 'GET',\n        //             headers: {\n        //                 'content-type': 'application/json'\n        //             }\n        //         })\n        //         .then(res => {\n        //             if (!res.ok)\n        //                 return res.json().then(e => Promise.reject(e))\n        //             return res.json()\n        //         })\n        //         .then(playlist => {\n        //             console.log(playlist)\n        //             this.setPlaylist(playlist)\n\n        //             fetch(config.ENDPOINT + `/genres/${playlist.genre_id}`,\n        //                 {\n        //                     method: 'GET',\n        //                     headers: {\n        //                         'content-type': 'application/json'\n        //                     }\n        //                 })\n        //                 .then(res2 => {\n        //                     if (!res2.ok)\n        //                         return res2.json().then(e => Promise.reject(e))\n        //                     return res2.json()\n        //                 })\n        //                 .then(genre => {\n        //                     let rand = Math.floor(Math.random() * 1950);\n        //                     let queryString = 'genre:%20' + genre.name + '&type=track&limit=50&offset=' + rand\n\n        //                     let fetData = {\n        //                         qString: queryString,\n        //                     }\n\n        //                     fetch(`${config.ENDPOINT}/data`, {\n        //                         method: 'POST',\n        //                         headers: {\n        //                             'content-type': 'application/json'\n        //                         },\n        //                         body: JSON.stringify(fetData),\n        //                     })\n        //                         .then(res3 => {\n        //                             if (!res3.ok)\n        //                                 return res3.json().then(e => Promise.reject(e))\n        //                             return res3.json()\n        //                         }).then(response => {\n        //                             console.log(response.tracks)\n        //                             let runtime = 0\n        //                             let chosen = []\n\n        //                             while (runtime < playlist.length) {\n\n        //                                 let trackChoice = Math.floor(Math.random() * 50);\n\n        //                                 if (!chosen.includes(trackChoice)) {\n        //                                     chosen.push(trackChoice)\n        //                                     let artists = []\n        //                                     for (let i = 0; i < response.tracks.items[trackChoice].artists.length; i++)\n        //                                         artists.push(response.tracks.items[trackChoice].artists[i].name)\n\n        //                                     let song = {\n        //                                         id: response.tracks.items[trackChoice].id,\n        //                                         url: response.tracks.items[trackChoice].external_urls.spotify,\n        //                                         title: response.tracks.items[trackChoice].name,\n        //                                         length: response.tracks.items[trackChoice].duration_ms,\n        //                                         explicit: response.tracks.items[trackChoice].explicit,\n        //                                         artist: artists\n        //                                     }\n        //                                     // console.log(song)\n        //                                     runtime += song.length\n        //                                     this.addSongs(song)\n\n        //                                 }\n\n        //                             }\n\n        //                         }).catch(error3 => {\n        //                             console.error({ error3 })\n        //                         })\n\n        //                 }).catch(error2 => {\n        //                     console.error({ error2 });\n        //                 });\n\n        //         })\n        //         .catch(error => {\n        //             console.error({ error });\n        //         });\n        // }\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log(nextProps.match.params)\n        // if (this.state.playlist)\n        //     if (nextProps.match.params.playlistId === this.state.playlistId) {\n        //         return;\n        //     } else {\n        //         this.setState({ playlistId: nextProps.match.params.playlistId })\n        //         // this.componentDidMount()\n        //         // this.render()\n        //     }\n\n        // else {\n        //     this.setState({ playlistId: nextProps.match.params.playlistId })\n        //     // this.componentDidMount()\n        //     // this.render()\n        // }\n    }\n\n    mounter = (value) => {\n        let playlistOut = value.playlists.find(playlist => {\n            return playlist.id === this.props.match.params.playlistId\n        })\n        console.log(playlistOut)\n        this.setPlaylist(playlistOut)\n    }\n\n\n    render() {\n        if (this.state.playlist === null) return <h1>Loading..</h1>;\n\n        // let songDisplay = this.state.songs.map(song => {\n        //     return <Song track={song} key={song.id} />\n        // })\n        return (\n            // <PlaylistContext.Consumer>\n            //     {(value) => {\n            //         let output = this.mounter(value)\n            //         console.log(output)\n            //         return output && (\n            <Playlist playlist={this.state.playlist} songs={this.state.songs} />\n            //     )\n            // }\n            // }\n\n            // </PlaylistContext.Consumer>\n            // )\n            // {/* } */}\n            // }\n            // {/* </PlaylistContext.Consumer > */}\n\n        )\n\n    }\n}\n","import React from 'react'\n// import './playlist.css'\n// import Moment from 'react-moment'\nimport { Link } from 'react-router-dom'\nimport PlaylistContext from '../PlaylistContext'\nimport PropTypes from 'prop-types'\nimport config from '../config'\n\nexport default function Playlister(props) {\n    // let date = <Moment format=\"Do of MMM YYYY\">\n    //     {props.mod}\n    // </Moment>\n    console.log(props)\n    // let handleClickDelete = (value) => {\n    //     const playlistId = props.id\n    //     fetch(`${config.playlist_end}/${playlistId}`, {\n    //         method: 'DELETE',\n    //         headers: {\n    //             'content-type': 'application/json'\n    //         },\n    //     })\n    //         .then(res => {\n    //             if (!res.ok)\n    //                 return res.json().then(e => Promise.reject(e))\n    //             // return res.json()\n    //         })\n    //         .then(() => {\n    //             value.deletePlaylist(playlistId)\n    //         })\n    //         .catch(error => {\n    //             console.error({ error })\n    //         })\n\n    //     if (props.history)\n    //         props.history.push('/')\n    // }\n\n    // return (\n    //     <PlaylistContext.Consumer>\n    //         {(value) => {\n    return (\n        <div className=\"list-item\">\n            <Link to={`/playlist-display/${props.id}`} className=\"title\">\n                <h2>{props.name}</h2>\n\n            </Link>\n            <span>{props.genre.name}</span>\n            {/* <p>{\"Date modified on \"}{date}</p> */}\n            {/* <button className=\"delete\" onClick={() => handleClickDelete(value)}>Delete playlist</button> */}\n        </div>\n    )\n}\n    //         }\n    //     </PlaylistContext.Consumer>\n    // )\n// }\n\n// playlist.propTypes = {\n//     id: PropTypes.number,\n//     name: PropTypes.string,\n//     content: PropTypes.string,\n//     mod: PropTypes.string,\n// } \n","import React, { Component } from 'react';\n// import NoteList from './NoteHandle/NoteList'\nimport Nav from '../Nav'\nimport Playlister from './Playlister'\nimport { Link } from 'react-router-dom'\nimport PlaylistContext from '../PlaylistContext'\nimport './Existing-playlists.css'\n\n\nexport default class ExistingPlaylist extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: props.id,\n            name: props.name,\n        }\n    }\n\n    lister = (value) => {\n        return value.playlists.map(playlist => {\n\n            if (playlist) {\n                let genre = value.genres.find(genre => {\n                    return genre.id === playlist.genre_id\n                })\n                return (\n                    <Playlister key={playlist.id} id={playlist.id} name={playlist.name} genre={genre} length={playlist.length} />\n                )\n            }\n            return null\n\n        })\n    }\n\n    render() {\n        return (\n            <PlaylistContext.Consumer>\n                {(value) => {\n                    let output = this.lister(value)\n                    return (\n                        <div id=\"main\">\n                            {output}\n                            <div className=\"add\">\n                                <Link to={'/add-note'}  >\n                                    <h2 className=\"addFolder\">Add note</h2>\n                                </Link>\n                            </div>\n                        </div>\n                    )\n                }\n                }\n            </PlaylistContext.Consumer>\n\n\n        )\n    }\n}","export default [{\n    id: 1,\n    name: 'Acoustic'\n}]","import React, { Component } from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport './App.css';\nimport config from './config';\nimport PlaylistContext from './PlaylistContext'\nimport Landing from './Landingpage/Landing'\nimport Homepage from './Homepage/Homepage'\nimport PlaylistDisplay from './Playlists/Playlist-Display'\nimport ExistingPlaylists from './Playlists/Existing-playlists'\nimport genreStore from './genreStore'\nimport playStore from './playStore'\n\nclass App extends Component {\n\n  state = {\n    genres: [],\n    playlists: [],\n    user: null,\n    error: null,\n  }\n\n  setGenres = genres => {\n    this.setState({\n      genres\n    })\n  }\n\n  setPlaylists = playlists => {\n    this.setState({\n      playlists\n    })\n  }\n\n  fetcher = () => {\n    // let endpoint = config.ENDPOINT\n    // Promise.all([\n    //   fetch(endpoint + '/playlists'),\n    //   fetch(endpoint + '/genres'),\n\n    //   fetch(endpoint + '/auth')\n    // ],\n    //   {\n    //     method: 'GET',\n    //     headers: {\n    //       'content-type': 'application/json',\n    //     },\n    //   })\n    //   .then(([playlistRes, genreRes, authRes]) => {\n    //     if (!playlistRes.ok)\n    //       return playlistRes.json().then(error => Promise.reject(error))\n    //     if (!genreRes.ok)\n    //       return genreRes.json().then(error => Promise.reject(error))\n    //     if (!authRes.ok)\n    //       return authRes.json().then(error => Promise.reject(error))\n    //     return Promise.all([playlistRes.json(), genreRes.json(), authRes.json()])\n    //   })\n    //   .then(([playlist, genres, auth]) => {\n    //     this.setPlaylists(playlist)\n    //     this.setGenres(genres)\n    //     console.log(auth)\n    //   })\n    //   .catch(error => {\n    //     console.error({ error });\n    //   });\n  }\n\n  componentDidMount() {\n    // this.fetcher()\n  }\n\n  // pageUpdate = () => {\n  //   this.componentDidMount()\n  // }\n\n  render() {\n    const contextValue = {\n      genres: genreStore,\n      playlists: playStore,\n      pageUpdate: this.fetcher,\n    }\n\n    return (\n      <div className=\"App\" >\n        <header className=\"App-header\">\n          <Link to={'/'} id=\"home-link\">\n            <h1>ShowTunes</h1>\n          </Link>\n          <hr />\n        </header>\n        <PlaylistContext.Provider value={contextValue}>\n          <main id=\"stage\">\n            <Switch>\n              <Route exact path='/' component={Landing} />\n              <Route path='/homepage' component={Homepage} />\n              <Route path='/existing-playlists' component={ExistingPlaylists} />\n              <Route path='/playlist-display/:playlistId' component={PlaylistDisplay} />\n            </Switch>\n          </main>\n        </PlaylistContext.Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}