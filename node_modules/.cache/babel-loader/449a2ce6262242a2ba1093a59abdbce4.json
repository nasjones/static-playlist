{"ast":null,"code":"var _jsxFileName = \"/Users/Nas/Desktop/Thinkful/static-playlist/src/Playlists/Playlist.js\";\nimport React, { Component } from 'react';\nimport Song from './Song';\nimport Nav from '../Nav';\nimport { render } from '@testing-library/react';\nexport default class playlist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clicker = playlistId => {\n      this.props.clicker(playlistId);\n      this.setState({\n        hidden: true\n      });\n    };\n\n    this.state = {\n      hidden: true\n    };\n    console.log(props);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n    this.resize();\n  }\n\n  render() {\n    if (this.props.playlist == undefined) return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 54\n      }\n    }, \"Loading..\");\n    let songDisplay = this.props.songs.map(song => {\n      return /*#__PURE__*/React.createElement(Song, {\n        track: song,\n        key: song.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 20\n        }\n      });\n    });\n\n    if (!this.state.hidden) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"playlistDisplay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        id: \"ham\",\n        src: require('../Ham.png'),\n        alt: \"ham-icon\",\n        onClick: e => {\n          this.setState({\n            hidden: !this.state.hidden\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Nav, {\n        clicker: this.clicker,\n        hidden: window.hide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"playlistContent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        id: \"playlist-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, this.props.playlist.name), songDisplay));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"playlistDisplay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        id: \"ham\",\n        src: require('../Ham.png'),\n        alt: \"ham-icon\",\n        onClick: e => {\n          this.setState({\n            hidden: !this.state.hidden\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"playlistContent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        id: \"playlist-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, this.props.playlist.name), songDisplay));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/static-playlist/src/Playlists/Playlist.js"],"names":["React","Component","Song","Nav","render","playlist","constructor","props","clicker","playlistId","setState","hidden","state","console","log","componentDidMount","window","addEventListener","resize","bind","undefined","songDisplay","songs","map","song","id","require","e","hide","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Song from './Song'\nimport Nav from '../Nav'\nimport { render } from '@testing-library/react';\n\nexport default class playlist extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hidden: true\n        }\n        console.log(props)\n\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.resize.bind(this));\n        this.resize();\n    }\n\n    clicker = (playlistId) => {\n        this.props.clicker(playlistId)\n        this.setState({\n            hidden: true\n        })\n    }\n\n    render() {\n        if (this.props.playlist == undefined) return <h1>Loading..</h1>;\n\n        let songDisplay = this.props.songs.map(song => {\n            return <Song track={song} key={song.id} />\n        })\n        if (!this.state.hidden) {\n            return (\n                <div id=\"playlistDisplay\">\n                    <img id=\"ham\" src={require('../Ham.png')} alt=\"ham-icon\" onClick={e => {\n                        this.setState({\n                            hidden: !this.state.hidden\n                        })\n                    }} />\n\n                    <Nav clicker={this.clicker} hidden={window.hide} />\n\n                    <div id=\"playlistContent\">\n\n                        <h2 id=\"playlist-title\">{this.props.playlist.name}</h2>\n                        {songDisplay}\n                    </div>\n\n                </div>\n            )\n        }\n        else {\n            return (\n                <div id=\"playlistDisplay\">\n                    <img id=\"ham\" src={require('../Ham.png')} alt=\"ham-icon\" onClick={e => {\n                        this.setState({\n                            hidden: !this.state.hidden\n                        })\n                    }} />\n\n                    <div id=\"playlistContent\">\n\n                        <h2 id=\"playlist-title\">{this.props.playlist.name}</h2>\n                        {songDisplay}\n                    </div>\n\n                </div>\n            )\n        }\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}