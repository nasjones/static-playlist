{"ast":null,"code":"var _jsxFileName = \"/Users/Nas/Desktop/Thinkful/static-playlist/src/Homepage/Homepage.js\";\nimport React, { Component } from 'react';\nimport PlaylistContext from '../PlaylistContext';\nimport './Homepage.css';\nimport GenreCheck from './GenreCheck';\nimport ValidationError from '../ValidationError'; // import playlists from '../playStore'\n\nexport default class HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fieldChange = e => {\n      this.setState({\n        selectedId: e.target.id,\n        selectedGen: e.target.value\n      });\n    };\n\n    this.titleChange = e => {\n      this.setState({\n        title: e.target.value,\n        titleTouch: true\n      });\n    };\n\n    this.minChange = e => {\n      this.setState({\n        min: parseInt(e.target.value),\n        minTouch: true\n      });\n    };\n\n    this.hourChange = e => {\n      this.setState({\n        hour: parseInt(e.target.value),\n        hourTouch: true\n      });\n    };\n\n    this.minArr = () => {\n      let arr = new Array(60);\n\n      for (let i = 0; i <= 59; i++) arr[i] = i;\n\n      return arr;\n    };\n\n    this.hourArr = () => {\n      let arr = new Array(4);\n\n      for (let i = 0; i <= 2; i++) arr[i] = i;\n\n      return arr;\n    };\n\n    this.validateTime = () => {\n      const hourSelect = this.state.hour;\n      const minSelect = this.state.min;\n      if (hourSelect === null || minSelect === null || isNaN(hourSelect) || isNaN(minSelect) || hourSelect === 0 && minSelect === 0) return \"Select a valid time\";\n    };\n\n    this.validateGenre = () => {\n      const genre = this.state.selectedId;\n      if (genre === null) return \"You must select a genre.\";\n    };\n\n    this.validateTitle = () => {\n      const titleInput = this.state.title.trim();\n\n      if (titleInput.length === 0) {\n        return \"Title is required.\";\n      } else if (titleInput.length < 3) {\n        return \"Title must be atleast 3 characters long.\";\n      }\n    };\n\n    this.subHandle = (e, value) => {\n      e.preventDefault();\n      let time = 3600000 * this.state.hour + 60000 * this.state.min;\n      let newPlaylist = {\n        id: value.playlists.length + 1,\n        name: this.state.title.trim(),\n        genre_id: this.state.selectedId,\n        length: time\n      };\n      window.globe.playStore.push(newPlaylist);\n      console.log(window.globe.playStore);\n      this.props.history.push(`/playlist-display/${newPlaylist.id}`); // return [...value.playlists, newPlaylist]\n    };\n\n    this.state = {\n      title: \"\",\n      titleTouch: false,\n      selectedId: null,\n      selectedGen: null,\n      genTouch: false,\n      hour: null,\n      hourTouch: false,\n      min: null,\n      minTouch: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(PlaylistContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, value => {\n      let genres = value.genres.map(genre => /*#__PURE__*/React.createElement(GenreCheck, {\n        id: genre.id,\n        name: genre.name,\n        selected: this.state.selectedGen,\n        key: genre.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }));\n      let minutes = this.minArr().map(min => {\n        if (min < 10) return /*#__PURE__*/React.createElement(\"option\", {\n          value: min,\n          key: min,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 36\n          }\n        }, \"0\", min);else return /*#__PURE__*/React.createElement(\"option\", {\n          value: min,\n          key: min,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 36\n          }\n        }, min);\n      });\n      let hours = this.hourArr().map(min => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: min,\n          key: min,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 32\n          }\n        }, min);\n      });\n      const timeError = this.validateTime();\n      const genreError = this.validateGenre();\n      const titleError = this.validateTitle();\n      return genres && /*#__PURE__*/React.createElement(\"div\", {\n        id: \"play-stage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"input-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inputs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"title-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 41\n        }\n      }, \"Playlist Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"title-input\",\n        onChange: this.titleChange,\n        className: \"user-inputs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 41\n        }\n      }), this.state.titleTouch && /*#__PURE__*/React.createElement(ValidationError, {\n        message: titleError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 67\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inputs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"hour-length\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 41\n        }\n      }, \"Playlist length: \"), /*#__PURE__*/React.createElement(\"select\", {\n        onChange: this.hourChange,\n        className: \"user-inputs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 45\n        }\n      }, \"--Hour(s)--\"), hours), \":\", /*#__PURE__*/React.createElement(\"select\", {\n        onChange: this.minChange,\n        className: \"user-inputs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 45\n        }\n      }, \"--Minute(s)--\"), minutes), this.state.hourTouch && this.state.minTouch && /*#__PURE__*/React.createElement(ValidationError, {\n        message: timeError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 91\n        }\n      }))), /*#__PURE__*/React.createElement(\"fieldset\", {\n        onChange: this.fieldChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"legend\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 37\n        }\n      }, \"Choose your genre!\"), this.state.genTouch && /*#__PURE__*/React.createElement(ValidationError, {\n        message: genreError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 62\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"genres\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 37\n        }\n      }, genres)), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        id: \"create\",\n        onClick: e => value.playlists = this.subHandle(e, value),\n        disabled: timeError || genreError || titleError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 33\n        }\n      }, \"Create your playlist!\")));\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/static-playlist/src/Homepage/Homepage.js"],"names":["React","Component","PlaylistContext","GenreCheck","ValidationError","HomePage","constructor","props","fieldChange","e","setState","selectedId","target","id","selectedGen","value","titleChange","title","titleTouch","minChange","min","parseInt","minTouch","hourChange","hour","hourTouch","minArr","arr","Array","i","hourArr","validateTime","hourSelect","state","minSelect","isNaN","validateGenre","genre","validateTitle","titleInput","trim","length","subHandle","preventDefault","time","newPlaylist","playlists","name","genre_id","window","globe","playStore","push","console","log","history","genTouch","render","genres","map","minutes","hours","timeError","genreError","titleError"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PlaylistContext from '../PlaylistContext'\nimport './Homepage.css'\nimport GenreCheck from './GenreCheck'\nimport ValidationError from '../ValidationError'\n// import playlists from '../playStore'\n\n\nexport default class HomePage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            title: \"\",\n            titleTouch: false,\n            selectedId: null,\n            selectedGen: null,\n            genTouch: false,\n            hour: null,\n            hourTouch: false,\n            min: null,\n            minTouch: false,\n        }\n    }\n\n    fieldChange = e => {\n        this.setState({\n            selectedId: e.target.id,\n            selectedGen: e.target.value\n        })\n    }\n\n    titleChange = e => {\n        this.setState({\n            title: e.target.value,\n            titleTouch: true\n        })\n    }\n\n    minChange = e => {\n        this.setState({\n            min: parseInt(e.target.value),\n            minTouch: true\n        })\n    }\n\n    hourChange = e => {\n        this.setState({\n            hour: parseInt(e.target.value),\n            hourTouch: true\n        })\n    }\n\n    minArr = () => {\n        let arr = new Array(60);\n        for (let i = 0; i <= 59; i++)\n            arr[i] = i\n\n        return arr\n    }\n\n    hourArr = () => {\n        let arr = new Array(4);\n        for (let i = 0; i <= 2; i++)\n            arr[i] = i\n        return arr\n    }\n\n    validateTime = () => {\n        const hourSelect = this.state.hour\n        const minSelect = this.state.min\n        if ((hourSelect === null) || (minSelect === null) || isNaN(hourSelect) || isNaN(minSelect) || (hourSelect === 0 && minSelect === 0))\n            return \"Select a valid time\"\n    }\n\n    validateGenre = () => {\n        const genre = this.state.selectedId\n        if (genre === null)\n            return \"You must select a genre.\"\n    }\n\n    validateTitle = () => {\n        const titleInput = this.state.title.trim()\n        if (titleInput.length === 0) {\n            return \"Title is required.\"\n        } else if (titleInput.length < 3) {\n            return \"Title must be atleast 3 characters long.\"\n        }\n    }\n\n    subHandle = (e, value) => {\n        e.preventDefault();\n        let time = (3600000 * this.state.hour) + (60000 * this.state.min)\n        let newPlaylist = {\n            id: value.playlists.length + 1,\n            name: this.state.title.trim(),\n            genre_id: this.state.selectedId,\n            length: time,\n        }\n\n        window.globe.playStore.push(newPlaylist)\n        console.log(window.globe.playStore)\n        this.props.history.push(`/playlist-display/${newPlaylist.id}`)\n        // return [...value.playlists, newPlaylist]\n\n\n    }\n\n    render() {\n\n        return (\n            <PlaylistContext.Consumer>\n                {(value) => {\n\n                    let genres = value.genres.map(genre =>\n                        <GenreCheck id={genre.id} name={genre.name} selected={this.state.selectedGen} key={genre.id} />\n                    )\n\n                    let minutes = this.minArr().map(min => {\n                        if (min < 10)\n                            return <option value={min} key={min}>0{min}</option>\n                        else\n                            return <option value={min} key={min}>{min}</option>\n                    })\n\n                    let hours = this.hourArr().map(min => {\n                        return <option value={min} key={min}>{min}</option>\n                    })\n\n                    const timeError = this.validateTime()\n                    const genreError = this.validateGenre()\n                    const titleError = this.validateTitle()\n\n                    return genres && (\n                        <div id=\"play-stage\">\n                            <form>\n                                <div id=\"input-wrap\">\n                                    <div className=\"inputs\">\n                                        <label htmlFor=\"title-input\">Playlist Name: </label>\n                                        <input type=\"text\" id=\"title-input\" onChange={this.titleChange} className=\"user-inputs\" />\n                                        {this.state.titleTouch && <ValidationError message={titleError} />}\n                                    </div>\n                                    <div className=\"inputs\">\n                                        <label htmlFor=\"hour-length\">Playlist length: </label>\n                                        <select onChange={this.hourChange} className=\"user-inputs\">\n                                            <option value={null}>--Hour(s)--</option>\n                                            {hours}\n                                        </select>\n                                    :\n                                    <select onChange={this.minChange} className=\"user-inputs\">\n                                            <option value={null}>--Minute(s)--</option>\n                                            {minutes}\n                                        </select>\n                                        {(this.state.hourTouch && this.state.minTouch) && <ValidationError message={timeError} />}\n                                    </div>\n                                </div>\n                                <fieldset onChange={this.fieldChange}>\n                                    <legend>Choose your genre!</legend>\n                                    {(this.state.genTouch && <ValidationError message={genreError} />)}\n                                    <div id=\"genres\">\n                                        {genres}\n                                    </div>\n                                </fieldset>\n                                <button type=\"submit\" id=\"create\" onClick={e => value.playlists = this.subHandle(e, value)} disabled={timeError || genreError || titleError}>Create your playlist!</button>\n                            </form>\n                        </div>\n                    )\n                }\n                }\n            </PlaylistContext.Consumer >\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}