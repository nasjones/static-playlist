{"ast":null,"code":"import _classCallCheck from\"/Users/Nas/Desktop/Thinkful/static-playlist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Nas/Desktop/Thinkful/static-playlist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/Nas/Desktop/Thinkful/static-playlist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/Nas/Desktop/Thinkful/static-playlist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Playlister from'./Playlister';import{Link}from'react-router-dom';import PlaylistContext from'../PlaylistContext';import'./Existing-playlists.css';var ExistingPlaylist=/*#__PURE__*/function(_Component){_inherits(ExistingPlaylist,_Component);var _super=_createSuper(ExistingPlaylist);function ExistingPlaylist(props){var _this;_classCallCheck(this,ExistingPlaylist);_this=_super.call(this,props);_this.lister=function(value){return value.playlists.map(function(playlist){if(playlist){var genre=value.genres.find(function(genre){return genre.id===playlist.genre_id;});return/*#__PURE__*/React.createElement(Playlister,{key:playlist.id,id:playlist.id,name:playlist.name,genre:genre,length:playlist.length});}return null;});};_this.state={id:props.id,name:props.name};return _this;}_createClass(ExistingPlaylist,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(PlaylistContext.Consumer,null,function(value){var output=_this2.lister(value);return/*#__PURE__*/React.createElement(\"div\",{id:\"main\"},output,/*#__PURE__*/React.createElement(\"div\",{className:\"add\"},/*#__PURE__*/React.createElement(Link,{to:'/add-note'},/*#__PURE__*/React.createElement(\"h2\",{className:\"addFolder\"},\"Add note\"))));});}}]);return ExistingPlaylist;}(Component);export{ExistingPlaylist as default};","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/static-playlist/src/Playlists/Existing-playlists.js"],"names":["React","Component","Playlister","Link","PlaylistContext","ExistingPlaylist","props","lister","value","playlists","map","playlist","genre","genres","find","id","genre_id","name","length","state","output"],"mappings":"wnBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,CACA,MAAO,0BAAP,C,GAGqBC,CAAAA,gB,oHACjB,0BAAYC,KAAZ,CAAmB,kDACf,uBAAMA,KAAN,EADe,MAQnBC,MARmB,CAQV,SAACC,KAAD,CAAW,CAChB,MAAOA,CAAAA,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoB,SAAAC,QAAQ,CAAI,CAEnC,GAAIA,QAAJ,CAAc,CACV,GAAIC,CAAAA,KAAK,CAAGJ,KAAK,CAACK,MAAN,CAAaC,IAAb,CAAkB,SAAAF,KAAK,CAAI,CACnC,MAAOA,CAAAA,KAAK,CAACG,EAAN,GAAaJ,QAAQ,CAACK,QAA7B,CACH,CAFW,CAAZ,CAGA,mBACI,oBAAC,UAAD,EAAY,GAAG,CAAEL,QAAQ,CAACI,EAA1B,CAA8B,EAAE,CAAEJ,QAAQ,CAACI,EAA3C,CAA+C,IAAI,CAAEJ,QAAQ,CAACM,IAA9D,CAAoE,KAAK,CAAEL,KAA3E,CAAkF,MAAM,CAAED,QAAQ,CAACO,MAAnG,EADJ,CAGH,CACD,MAAO,KAAP,CAEH,CAZM,CAAP,CAaH,CAtBkB,CAEf,MAAKC,KAAL,CAAa,CACTJ,EAAE,CAAET,KAAK,CAACS,EADD,CAETE,IAAI,CAAEX,KAAK,CAACW,IAFH,CAAb,CAFe,aAMlB,C,oEAkBQ,iBACL,mBACI,oBAAC,eAAD,CAAiB,QAAjB,MACK,SAACT,KAAD,CAAW,CACR,GAAIY,CAAAA,MAAM,CAAG,MAAI,CAACb,MAAL,CAAYC,KAAZ,CAAb,CACA,mBACI,2BAAK,EAAE,CAAC,MAAR,EACKY,MADL,cAEI,2BAAK,SAAS,CAAC,KAAf,eACI,oBAAC,IAAD,EAAM,EAAE,CAAE,WAAV,eACI,0BAAI,SAAS,CAAC,WAAd,aADJ,CADJ,CAFJ,CADJ,CAUH,CAbL,CADJ,CAoBH,C,8BA9CyCnB,S,SAAzBI,gB","sourcesContent":["import React, { Component } from 'react';\nimport Playlister from './Playlister'\nimport { Link } from 'react-router-dom'\nimport PlaylistContext from '../PlaylistContext'\nimport './Existing-playlists.css'\n\n\nexport default class ExistingPlaylist extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: props.id,\n            name: props.name,\n        }\n    }\n\n    lister = (value) => {\n        return value.playlists.map(playlist => {\n\n            if (playlist) {\n                let genre = value.genres.find(genre => {\n                    return genre.id === playlist.genre_id\n                })\n                return (\n                    <Playlister key={playlist.id} id={playlist.id} name={playlist.name} genre={genre} length={playlist.length} />\n                )\n            }\n            return null\n\n        })\n    }\n\n    render() {\n        return (\n            <PlaylistContext.Consumer>\n                {(value) => {\n                    let output = this.lister(value)\n                    return (\n                        <div id=\"main\">\n                            {output}\n                            <div className=\"add\">\n                                <Link to={'/add-note'}  >\n                                    <h2 className=\"addFolder\">Add note</h2>\n                                </Link>\n                            </div>\n                        </div>\n                    )\n                }\n                }\n            </PlaylistContext.Consumer>\n\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}