{"ast":null,"code":"var _jsxFileName = \"/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Playlists/PlaylistList.js\";\n// import React from 'react'\n// import Note from './Note'\nimport { Link } from 'react-router-dom';\nimport { Component } from 'react'; // import NoteError from './NoteError'\n// import PropTypes from 'prop-types'\n\nexport default class PlaylistList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.output = () => {\n      props.playlists.map(playlist => {\n        if (playlist) return /*#__PURE__*/React.createElement(NoteError, {\n          key: notes.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Note, {\n          id: notes.id,\n          name: notes.name,\n          content: notes.content,\n          mod: notes.modified,\n          key: notes.id,\n          bool: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }\n        }));\n        return null;\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, output, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: '/add-note',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"addFolder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, \"Add note\"))));\n  }\n\n} // NoteList.propTypes = {\n//     notes: PropTypes.arrayOf(\n//         PropTypes.shape({\n//             id: PropTypes.number.isRequired,\n//             name: PropTypes.string.isRequired,\n//             modified: PropTypes.string.isRequired,\n//             folder_id: PropTypes.number.isRequired,\n//             content: PropTypes.string.isRequired,\n//         }))\n// }","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Playlists/PlaylistList.js"],"names":["Link","Component","PlaylistList","output","props","playlists","map","playlist","notes","id","name","content","modified","render"],"mappings":";AAAA;AACA;AACA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CACA;AACA;;AAEA,eAAe,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAChDE,MADgD,GACvC,MAAM;AACXC,MAAAA,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoBC,QAAQ,IAAI;AAC5B,YAAIA,QAAJ,EACI,oBACI,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAEC,KAAK,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAED,KAAK,CAACC,EAAhB;AAAoB,UAAA,IAAI,EAAED,KAAK,CAACE,IAAhC;AAAsC,UAAA,OAAO,EAAEF,KAAK,CAACG,OAArD;AAA8D,UAAA,GAAG,EAAEH,KAAK,CAACI,QAAzE;AAAmF,UAAA,GAAG,EAAEJ,KAAK,CAACC,EAA9F;AAAkG,UAAA,IAAI,EAAE,KAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAKJ,eAAO,IAAP;AACH,OARD;AASH,KAX+C;AAAA;;AAYhDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,MADL,eAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,CAFJ,CADJ;AAUH;;AAvB+C,C,CA2BpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from 'react'\n// import Note from './Note'\nimport { Link } from 'react-router-dom'\nimport { Component } from 'react'\n// import NoteError from './NoteError'\n// import PropTypes from 'prop-types'\n\nexport default class PlaylistList extends Component {\n    output = () => {\n        props.playlists.map(playlist => {\n            if (playlist)\n                return (\n                    <NoteError key={notes.id}>\n                        <Note id={notes.id} name={notes.name} content={notes.content} mod={notes.modified} key={notes.id} bool={false} />\n                    </NoteError>\n                )\n            return null\n        })\n    }\n    render() {\n        return (\n            <div id=\"main\">\n                {output}\n                <div className=\"add\">\n                    <Link to={'/add-note'}  >\n                        <h2 className=\"addFolder\">Add note</h2>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n// NoteList.propTypes = {\n//     notes: PropTypes.arrayOf(\n//         PropTypes.shape({\n//             id: PropTypes.number.isRequired,\n//             name: PropTypes.string.isRequired,\n//             modified: PropTypes.string.isRequired,\n//             folder_id: PropTypes.number.isRequired,\n//             content: PropTypes.string.isRequired,\n//         }))\n// }"]},"metadata":{},"sourceType":"module"}