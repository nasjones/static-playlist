{"ast":null,"code":"import _toConsumableArray from\"/Users/Nas/Desktop/Thinkful/playlist-maker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/Nas/Desktop/Thinkful/playlist-maker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Nas/Desktop/Thinkful/playlist-maker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/Nas/Desktop/Thinkful/playlist-maker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/Nas/Desktop/Thinkful/playlist-maker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link,withRouter}from'react-router-dom';import PlaylistContext from'../PlaylistContext';import config from'../config';import Song from'./Song';import Nav from'../Nav';import'./Playlist-Display.css';// import './Landing.css'\nvar PlaylistDisplay=/*#__PURE__*/function(_Component){_inherits(PlaylistDisplay,_Component);var _super=_createSuper(PlaylistDisplay);function PlaylistDisplay(props){var _this;_classCallCheck(this,PlaylistDisplay);_this=_super.call(this,props);_this._isMounted=false;_this.setPlaylistId=function(playlistId){_this.setState({playlistId:playlistId});};_this.setPlaylist=function(playlist){_this.setState({playlist:playlist});};_this.addSongs=function(song){_this.setState({songs:[].concat(_toConsumableArray(_this.state.songs),[song])});};_this.state={playlistId:_this.props.match.params.playlistId,playlist:null,songs:[],isFlushed:false};return _this;}_createClass(PlaylistDisplay,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this._isMounted=true;var playlistId=this.props.match.params.playlistId;console.log(playlistId);if(this._isMounted){fetch(config.ENDPOINT+\"/playlists/\".concat(playlistId),{method:'GET',headers:{'content-type':'application/json'}}).then(function(res){if(!res.ok)return res.json().then(function(e){return Promise.reject(e);});return res.json();}).then(function(playlist){console.log(playlist);_this2.setPlaylist(playlist);fetch(config.ENDPOINT+\"/genres/\".concat(playlist.genre_id),{method:'GET',headers:{'content-type':'application/json'}}).then(function(res2){if(!res2.ok)return res2.json().then(function(e){return Promise.reject(e);});return res2.json();}).then(function(genre){var rand=Math.floor(Math.random()*1950);var queryString='genre:%20'+genre.name+'&type=track&limit=50&offset='+rand;var fetData={qString:queryString};fetch(\"\".concat(config.ENDPOINT,\"/data\"),{method:'POST',headers:{'content-type':'application/json'},body:JSON.stringify(fetData)}).then(function(res3){if(!res3.ok)return res3.json().then(function(e){return Promise.reject(e);});return res3.json();}).then(function(response){console.log(response.tracks);var runtime=0;var chosen=[];while(runtime<playlist.length){var trackChoice=Math.floor(Math.random()*50);if(!chosen.includes(trackChoice)){chosen.push(trackChoice);var artists=[];for(var i=0;i<response.tracks.items[trackChoice].artists.length;i++){artists.push(response.tracks.items[trackChoice].artists[i].name);}var song={id:response.tracks.items[trackChoice].id,url:response.tracks.items[trackChoice].external_urls.spotify,title:response.tracks.items[trackChoice].name,length:response.tracks.items[trackChoice].duration_ms,explicit:response.tracks.items[trackChoice].explicit,artist:artists};console.log(song);runtime+=song.length;_this2.addSongs(song);}}console.log(runtime);}).catch(function(error3){console.error({error3:error3});});}).catch(function(error2){console.error({error2:error2});});}).catch(function(error){console.error({error:error});});}}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){console.log(nextProps.match.params);if(this.state.playlist){if(nextProps.match.params.playlistId===this.state.playlistId){return;}else{this.setState({playlistId:nextProps.match.params.playlistId});// this.componentDidMount()\n// this.render()\n}}else{this.setState({playlistId:nextProps.match.params.playlistId});// this.componentDidMount()\n// this.render()\n}}},{key:\"render\",value:function render(){if(this.state.playlist===null)return/*#__PURE__*/React.createElement(\"h1\",null,\"Loading..\");var songDisplay=this.state.songs.map(function(song){return/*#__PURE__*/React.createElement(Song,{track:song,key:song.id});});return/*#__PURE__*/React.createElement(\"div\",{id:\"playlistDisplay\"},/*#__PURE__*/React.createElement(\"div\",{id:\"nav\"},/*#__PURE__*/React.createElement(Nav,{clicker:this.setPlaylistId})),/*#__PURE__*/React.createElement(\"div\",{id:\"playlistContent\"},/*#__PURE__*/React.createElement(\"h2\",{id:\"playlist-title\"},this.state.playlist.title),songDisplay))// )\n// {/* } */}\n// }\n// {/* </PlaylistContext.Consumer > */}\n;}}]);return PlaylistDisplay;}(Component);export{PlaylistDisplay as default};","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Playlists/Playlist-Display.js"],"names":["React","Component","Link","withRouter","PlaylistContext","config","Song","Nav","PlaylistDisplay","props","_isMounted","setPlaylistId","playlistId","setState","setPlaylist","playlist","addSongs","song","songs","state","match","params","isFlushed","console","log","fetch","ENDPOINT","method","headers","then","res","ok","json","e","Promise","reject","genre_id","res2","genre","rand","Math","floor","random","queryString","name","fetData","qString","body","JSON","stringify","res3","response","tracks","runtime","chosen","length","trackChoice","includes","push","artists","i","items","id","url","external_urls","spotify","title","duration_ms","explicit","artist","catch","error3","error","error2","nextProps","songDisplay","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport PlaylistContext from '../PlaylistContext'\nimport config from '../config'\nimport Song from './Song'\nimport Nav from '../Nav'\nimport './Playlist-Display.css'\n// import './Landing.css'\n\n\nexport default class PlaylistDisplay extends Component {\n    _isMounted = false;\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            playlistId: this.props.match.params.playlistId,\n            playlist: null,\n            songs: [],\n            isFlushed: false\n        }\n\n    }\n\n    setPlaylistId = (playlistId) => {\n        this.setState({ playlistId })\n    }\n\n    setPlaylist = (playlist) => {\n        this.setState({ playlist })\n    }\n\n    addSongs = (song) => {\n        this.setState({\n            songs: [...this.state.songs, song]\n        })\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        let playlistId = this.props.match.params.playlistId\n        console.log(playlistId)\n        if (this._isMounted) {\n            fetch(config.ENDPOINT + `/playlists/${playlistId}`,\n                {\n                    method: 'GET',\n                    headers: {\n                        'content-type': 'application/json'\n                    }\n                })\n                .then(res => {\n                    if (!res.ok)\n                        return res.json().then(e => Promise.reject(e))\n                    return res.json()\n                })\n                .then(playlist => {\n                    console.log(playlist)\n                    this.setPlaylist(playlist)\n\n                    fetch(config.ENDPOINT + `/genres/${playlist.genre_id}`,\n                        {\n                            method: 'GET',\n                            headers: {\n                                'content-type': 'application/json'\n                            }\n                        })\n                        .then(res2 => {\n                            if (!res2.ok)\n                                return res2.json().then(e => Promise.reject(e))\n                            return res2.json()\n                        })\n                        .then(genre => {\n                            let rand = Math.floor(Math.random() * 1950);\n                            let queryString = 'genre:%20' + genre.name + '&type=track&limit=50&offset=' + rand\n\n                            let fetData = {\n                                qString: queryString,\n                            }\n\n                            fetch(`${config.ENDPOINT}/data`, {\n                                method: 'POST',\n                                headers: {\n                                    'content-type': 'application/json'\n                                },\n                                body: JSON.stringify(fetData),\n                            })\n                                .then(res3 => {\n                                    if (!res3.ok)\n                                        return res3.json().then(e => Promise.reject(e))\n                                    return res3.json()\n                                }).then(response => {\n                                    console.log(response.tracks)\n                                    let runtime = 0\n                                    let chosen = []\n\n                                    while (runtime < playlist.length) {\n\n                                        let trackChoice = Math.floor(Math.random() * 50);\n\n                                        if (!chosen.includes(trackChoice)) {\n                                            chosen.push(trackChoice)\n                                            let artists = []\n                                            for (let i = 0; i < response.tracks.items[trackChoice].artists.length; i++)\n                                                artists.push(response.tracks.items[trackChoice].artists[i].name)\n\n                                            let song = {\n                                                id: response.tracks.items[trackChoice].id,\n                                                url: response.tracks.items[trackChoice].external_urls.spotify,\n                                                title: response.tracks.items[trackChoice].name,\n                                                length: response.tracks.items[trackChoice].duration_ms,\n                                                explicit: response.tracks.items[trackChoice].explicit,\n                                                artist: artists\n                                            }\n                                            console.log(song)\n                                            runtime += song.length\n                                            this.addSongs(song)\n\n                                        }\n\n                                    }\n                                    console.log(runtime)\n\n                                }).catch(error3 => {\n                                    console.error({ error3 })\n                                })\n\n                        }).catch(error2 => {\n                            console.error({ error2 });\n                        });\n\n                })\n                .catch(error => {\n                    console.error({ error });\n                });\n        }\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n        console.log(nextProps.match.params)\n        if (this.state.playlist)\n            if (nextProps.match.params.playlistId === this.state.playlistId) {\n                return;\n            } else {\n                this.setState({ playlistId: nextProps.match.params.playlistId })\n                // this.componentDidMount()\n                // this.render()\n            }\n\n        else {\n            this.setState({ playlistId: nextProps.match.params.playlistId })\n            // this.componentDidMount()\n            // this.render()\n        }\n    }\n\n\n    render() {\n        if (this.state.playlist === null) return <h1>Loading..</h1>;\n\n        let songDisplay = this.state.songs.map(song => {\n            return <Song track={song} key={song.id} />\n        })\n        return (\n\n            <div id=\"playlistDisplay\">\n                <div id=\"nav\">\n                    <Nav clicker={this.setPlaylistId} />\n                </div>\n                <div id=\"playlistContent\">\n\n                    <h2 id=\"playlist-title\">{this.state.playlist.title}</h2>\n                    {songDisplay}\n\n                    {/* <NoteError> */}\n                    {/* <Note id={output.id} name={output.name} content={output.content} mod={output.modified} key={output.id} history={this.props.history} /> */}\n                    {/* <p></p> */}\n                    {/* </NoteError> */}\n                    {/* </article> */}\n                </div>\n\n            </div>\n            // )\n            // {/* } */}\n            // }\n            // {/* </PlaylistContext.Consumer > */}\n        )\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}