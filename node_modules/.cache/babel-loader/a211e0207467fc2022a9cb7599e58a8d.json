{"ast":null,"code":"var _jsxFileName = \"/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Playlists/Playlist-Display.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PlaylistContext from '../PlaylistContext';\nimport config from '../config'; // import './Landing.css'\n\nexport default class PlaylistDisplay extends Component {\n  componentDidMount() {\n    let test = {\n      help: \"here\"\n    };\n    fetch(`${config.ENDPOINT}/data`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(newRecord)\n    }).then(res2 => {\n      if (!res2.ok) return res2.json().then(e => Promise.reject(e));\n      return res2.json();\n    }).then(res2 => {\n      this.props.history.push(`/playlist-display/${created.id}`);\n    }).catch(error2 => {\n      console.error({\n        error2\n      });\n    }); // fetch(config.ENDPOINT + '/data',\n    //     {\n    //         method: 'POST',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //         },\n    //         body: JSON.stringify(test)\n    //     })\n    //     .then(tracksRes => {\n    //         if (!tracksRes.ok)\n    //             return tracksRes.json().then(error => Promise.reject(error))\n    //         return tracksRes.json()\n    //     })\n    //     .then(tracks => {\n    //         // this.setPlaylists(playlist)\n    //         console.log(tracks)\n    //     })\n    //     .catch(error => {\n    //         console.error({ error });\n    //         this.setState({ error })\n    //     });\n  }\n\n  render() {\n    // console.log(this.props)\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \"You made it\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Playlists/Playlist-Display.js"],"names":["React","Component","Link","PlaylistContext","config","PlaylistDisplay","componentDidMount","test","help","fetch","ENDPOINT","method","headers","body","JSON","stringify","newRecord","then","res2","ok","json","e","Promise","reject","props","history","push","created","id","catch","error2","console","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CACA;;AAGA,eAAe,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AAGnDK,EAAAA,iBAAiB,GAAG;AAEhB,QAAIC,IAAI,GAAG;AACPC,MAAAA,IAAI,EAAE;AADC,KAAX;AAGAC,IAAAA,KAAK,CAAE,GAAEL,MAAM,CAACM,QAAS,OAApB,EAA4B;AAC7BC,MAAAA,MAAM,EAAE,MADqB;AAE7BC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFoB;AAK7BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,SAAf;AALuB,KAA5B,CAAL,CAOKC,IAPL,CAOUC,IAAI,IAAI;AACV,UAAI,CAACA,IAAI,CAACC,EAAV,EACI,OAAOD,IAAI,CAACE,IAAL,GAAYH,IAAZ,CAAiBI,CAAC,IAAIC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAAtB,CAAP;AACJ,aAAOH,IAAI,CAACE,IAAL,EAAP;AACH,KAXL,EAWOH,IAXP,CAWYC,IAAI,IAAI;AAEZ,WAAKM,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAyB,qBAAoBC,OAAO,CAACC,EAAG,EAAxD;AACH,KAdL,EAcOC,KAdP,CAcaC,MAAM,IAAI;AACfC,MAAAA,OAAO,CAACC,KAAR,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACH,KAhBL,EALgB,CAsBhB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACH;;AACDG,EAAAA,MAAM,GAAG;AACL;AACA,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CAFJ;AAQH;;AA5DkD","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PlaylistContext from '../PlaylistContext'\nimport config from '../config'\n// import './Landing.css'\n\n\nexport default class PlaylistDisplay extends Component {\n\n\n    componentDidMount() {\n\n        let test = {\n            help: \"here\"\n        }\n        fetch(`${config.ENDPOINT}/data`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(newRecord),\n        })\n            .then(res2 => {\n                if (!res2.ok)\n                    return res2.json().then(e => Promise.reject(e))\n                return res2.json()\n            }).then(res2 => {\n\n                this.props.history.push(`/playlist-display/${created.id}`)\n            }).catch(error2 => {\n                console.error({ error2 })\n            })\n        // fetch(config.ENDPOINT + '/data',\n        //     {\n        //         method: 'POST',\n        //         headers: {\n        //             'content-type': 'application/json',\n        //         },\n        //         body: JSON.stringify(test)\n\n        //     })\n        //     .then(tracksRes => {\n        //         if (!tracksRes.ok)\n        //             return tracksRes.json().then(error => Promise.reject(error))\n\n        //         return tracksRes.json()\n        //     })\n        //     .then(tracks => {\n        //         // this.setPlaylists(playlist)\n        //         console.log(tracks)\n\n        //     })\n        //     .catch(error => {\n        //         console.error({ error });\n        //         this.setState({ error })\n        //     });\n    }\n    render() {\n        // console.log(this.props)\n        return (\n\n            <div>\n                <h2>\n                    You made it\n                </h2>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}