{"ast":null,"code":"var _jsxFileName = \"/Users/Nas/Desktop/Thinkful/static-playlist/src/Nav.js\";\nimport React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport './Nav.css';\nimport PropTypes from 'prop-types';\nimport PlaylistContext from './PlaylistContext';\nimport PlaylistDisplay from './Playlists/Playlist-Display';\nexport default function Nav(props) {\n  // console.log(props)\n  let output = value => {\n    if (window.globe.playStore.length > 10) {\n      return window.globe.playStore.slice(window.globe.playStore.length - 11, window.globe.playStore.length - 1).map(playlist => {\n        let genre = window.globe.genreStore.find(genre => {\n          return genre.id == playlist.genre_id;\n        });\n        return genre && /*#__PURE__*/React.createElement(Link, {\n          exact: \"true\",\n          key: playlist.id,\n          to: `/playlist-display/${playlist.id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"article\", {\n          className: \"navLink\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          id: playlist.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }\n        }, playlist.name), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }\n        }, \"Genre:\", genre.name)));\n      });\n    } else {\n      return window.globe.playStore.reverse().map(playlist => {\n        let genre = window.globe.genreStore.find(genre => {\n          return genre.id == playlist.genre_id;\n        });\n        return genre && /*#__PURE__*/React.createElement(Link, {\n          exact: \"true\",\n          key: playlist.id,\n          to: `/playlist-display/${playlist.id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"article\", {\n          className: \"navLink\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          id: playlist.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }\n        }, playlist.name), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }\n        }, \"Genre:\", genre.name)));\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(PlaylistContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, value => {\n    let playlistOut = output(value);\n    return playlistOut && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"navBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      id: \"recent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"Most Recent\"), playlistOut, /*#__PURE__*/React.createElement(Link, {\n      to: '/homepage',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"addFolder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, \"Add folder\")));\n  });\n}","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/static-playlist/src/Nav.js"],"names":["React","NavLink","Link","PropTypes","PlaylistContext","PlaylistDisplay","Nav","props","output","value","window","globe","playStore","length","slice","map","playlist","genre","genreStore","find","id","genre_id","name","reverse","playlistOut"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport './Nav.css'\nimport PropTypes from 'prop-types'\nimport PlaylistContext from './PlaylistContext'\nimport PlaylistDisplay from './Playlists/Playlist-Display'\n\nexport default function Nav(props) {\n    // console.log(props)\n\n    let output = (value) => {\n        if (window.globe.playStore.length > 10) {\n            return window.globe.playStore.slice(window.globe.playStore.length - 11, window.globe.playStore.length - 1).map(playlist => {\n                let genre = window.globe.genreStore.find(genre => {\n                    return genre.id == playlist.genre_id\n                })\n\n                return genre && (\n                    <Link exact=\"true\" key={playlist.id} to={`/playlist-display/${playlist.id}`}>\n                        <article className=\"navLink\">\n                            <h3 id={playlist.id} >{playlist.name}</h3>\n                            <span>Genre:{genre.name}</span>\n                        </article>\n                    </Link>\n                )\n            })\n        }\n        else {\n            return window.globe.playStore.reverse().map(playlist => {\n                let genre = window.globe.genreStore.find(genre => {\n                    return genre.id == playlist.genre_id\n                })\n\n                return genre && (\n                    <Link exact=\"true\" key={playlist.id} to={`/playlist-display/${playlist.id}`}>\n                        <article className=\"navLink\">\n                            <h3 id={playlist.id} >{playlist.name}</h3>\n                            <span>Genre:{genre.name}</span>\n                        </article>\n                    </Link>\n                )\n            })\n        }\n    };\n\n\n    return (\n        <PlaylistContext.Consumer>\n            {(value) => {\n                let playlistOut = output(value)\n                return playlistOut && (\n                    <div id=\"navBar\">\n                        <h2 id=\"recent\">Most Recent</h2>\n                        {playlistOut}\n                        <Link to={'/homepage'}  >\n                            <h3 className=\"addFolder\">Add folder</h3>\n                        </Link>\n                    </div>\n                )\n\n            }\n            }\n        </PlaylistContext.Consumer>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}