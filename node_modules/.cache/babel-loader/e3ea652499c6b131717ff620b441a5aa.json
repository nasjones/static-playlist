{"ast":null,"code":"import React from'react';import'./Song.css';import{Link}from'react-router-dom';import PlaylistContext from'../PlaylistContext';import config from'../config';export default function Song(props){// let date = <Moment format=\"Do of MMM YYYY\">\n//     {props.mod}\n// </Moment>\n// let handleClickDelete = (value) => {\n//     const noteId = props.id\n//     fetch(`${config.note_end}/${noteId}`, {\n//         method: 'DELETE',\n//         headers: {\n//             'content-type': 'application/json'\n//         },\n//     })\n//         .then(res => {\n//             if (!res.ok)\n//                 return res.json().then(e => Promise.reject(e))\n//             // return res.json()\n//         })\n//         .then(() => {\n//             value.deleteNote(noteId)\n//         })\n//         .catch(error => {\n//             console.error({ error })\n//         })\n//     if (props.history)\n//         props.history.push('/')\n// }\nvar msConverter=function msConverter(length){var min=Math.floor(length/60000);var sec=(length%60000/1000).toFixed(0);return min+\":\"+(sec<10?'0':'')+sec;};var timeOut=msConverter(props.track.length);var artistOut=props.track.artist.join(', ');return/*#__PURE__*/ (// <NoteContext.Consumer>\n// {(value) => {\n// return (\nReact.createElement(\"a\",{target:\"_blank\",href:props.track.url},/*#__PURE__*/React.createElement(\"div\",{className:\"song-item\"},/*#__PURE__*/React.createElement(\"h3\",null,props.track.title),/*#__PURE__*/React.createElement(\"span\",{className:\"artist\"},\"by: \",artistOut),/*#__PURE__*/React.createElement(\"span\",{id:\"time\"},timeOut),/*#__PURE__*/React.createElement(\"hr\",null)))// )\n// }\n// }\n// </NoteContext.Consumer>\n);}// Note.propTypes = {\n//     id: PropTypes.number,\n//     name: PropTypes.string,\n//     content: PropTypes.string,\n//     mod: PropTypes.string,\n// }","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Playlists/Song.js"],"names":["React","Link","PlaylistContext","config","Song","props","msConverter","length","min","Math","floor","sec","toFixed","timeOut","track","artistOut","artist","join","url","title"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,YAAP,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CAEA,cAAe,SAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,CAChC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,GAAIC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,MAAD,CAAY,CAC1B,GAAIC,CAAAA,GAAG,CAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAAG,KAApB,CAAV,CACA,GAAII,CAAAA,GAAG,CAAG,CAAEJ,MAAM,CAAG,KAAV,CAAmB,IAApB,EAA0BK,OAA1B,CAAkC,CAAlC,CAAV,CACA,MAAOJ,CAAAA,GAAG,CAAG,GAAN,EAAaG,GAAG,CAAG,EAAN,CAAW,GAAX,CAAiB,EAA9B,EAAoCA,GAA3C,CACH,CAJD,CAMA,GAAIE,CAAAA,OAAO,CAAGP,WAAW,CAACD,KAAK,CAACS,KAAN,CAAYP,MAAb,CAAzB,CACA,GAAIQ,CAAAA,SAAS,CAAGV,KAAK,CAACS,KAAN,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB,IAAxB,CAAhB,CACA,oBACI;AACA;AACA;AACA,yBAAG,MAAM,CAAC,QAAV,CAAmB,IAAI,CAAEZ,KAAK,CAACS,KAAN,CAAYI,GAArC,eACI,2BAAK,SAAS,CAAC,WAAf,eAGI,8BAAKb,KAAK,CAACS,KAAN,CAAYK,KAAjB,CAHJ,cAKI,4BAAM,SAAS,CAAC,QAAhB,SAA8BJ,SAA9B,CALJ,cAMI,4BAAM,EAAE,CAAC,MAAT,EAAiBF,OAAjB,CANJ,cAWI,8BAXJ,CADJ,CAgBA;AACA;AACA;AACA;AAvBJ,EAyBH,CAED;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport './Song.css'\nimport { Link } from 'react-router-dom'\nimport PlaylistContext from '../PlaylistContext'\nimport PropTypes from 'prop-types'\nimport config from '../config'\n\nexport default function Song(props) {\n    // let date = <Moment format=\"Do of MMM YYYY\">\n    //     {props.mod}\n    // </Moment>\n\n    // let handleClickDelete = (value) => {\n    //     const noteId = props.id\n    //     fetch(`${config.note_end}/${noteId}`, {\n    //         method: 'DELETE',\n    //         headers: {\n    //             'content-type': 'application/json'\n    //         },\n    //     })\n    //         .then(res => {\n    //             if (!res.ok)\n    //                 return res.json().then(e => Promise.reject(e))\n    //             // return res.json()\n    //         })\n    //         .then(() => {\n    //             value.deleteNote(noteId)\n    //         })\n    //         .catch(error => {\n    //             console.error({ error })\n    //         })\n\n    //     if (props.history)\n    //         props.history.push('/')\n    // }\n\n    let msConverter = (length) => {\n        var min = Math.floor(length / 60000);\n        var sec = ((length % 60000) / 1000).toFixed(0);\n        return min + \":\" + (sec < 10 ? '0' : '') + sec;\n    }\n\n    let timeOut = msConverter(props.track.length)\n    let artistOut = props.track.artist.join(', ')\n    return (\n        // <NoteContext.Consumer>\n        // {(value) => {\n        // return (\n        <a target='_blank' href={props.track.url}>\n            <div className=\"song-item\">\n                {/* <Link to={} className=\"title\"> */}\n\n                <h3>{props.track.title}</h3>\n\n                <span className=\"artist\">by: {artistOut}</span>\n                <span id=\"time\">{timeOut}</span>\n                {/* </Link> */}\n                {/* <p>{\"Date modified on \"}{date}</p> */}\n                {/* <button className=\"delete\" onClick={() => handleClickDelete(value)}>Delete Note</button> */}\n\n                <hr />\n            </div>\n\n        </a>\n        // )\n        // }\n        // }\n        // </NoteContext.Consumer>\n    )\n}\n\n// Note.propTypes = {\n//     id: PropTypes.number,\n//     name: PropTypes.string,\n//     content: PropTypes.string,\n//     mod: PropTypes.string,\n// } \n"]},"metadata":{},"sourceType":"module"}