{"ast":null,"code":"var _jsxFileName = \"/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Playlists/Playlist-Display.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PlaylistContext from '../PlaylistContext';\nimport config from '../config'; // import './Landing.css'\n\nexport default class PlaylistDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidUpdate() {\n    setTimeout(this.fetcher(), 1000);\n    console.log(\"running\");\n  } // <PlaylistContext.Consumer>\n  //     {(value) => {\n\n\n  fetcher() {\n    console.log(this.props.match.params);\n    let playlist = this.contextValue.playlists.find(lists => {\n      return lists.id === this.props.match.params.playlistId;\n    });\n    console.log(playlist); // return <div>{playlist}</div>\n    // return playlist\n    // fetch(config.ENDPOINT + '/data', {\n    //     method: 'POST',\n    //     headers: {\n    //         'content-type': 'application/json'\n    //     },\n    //     body: JSON.stringify(tinsel),\n    // })\n    //     .then(res => {\n    //         if (!res.ok)\n    //             return res.json().then(e => Promise.reject(e))\n    //         return res.json()\n    //     }).then(res => {\n    //         console.log(res)\n    //         // this.props.history.push(`/playlist-display/${created.id}`)\n    //     }).catch(error => {\n    //         console.error({ error })\n    //     })\n    // }\n    // }\n    // </PlaylistContext.Consumer>\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(PlaylistContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, value => {\n      this.contextValue = value;\n      console.log(value); // const output = value.notes.find(note =>\n      //     note.id === parseInt(this.props.match.params.noteId)\n      // )\n      // const folder = value.folders.find(folder =>\n      //     folder.id === output.folder_id\n      // )\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"noteDisplay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }\n      }, \"here\"), /*#__PURE__*/React.createElement(\"article\", {\n        className: \"displayed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }\n      })));\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Playlists/Playlist-Display.js"],"names":["React","Component","Link","PlaylistContext","config","PlaylistDisplay","constructor","props","state","componentDidUpdate","setTimeout","fetcher","console","log","match","params","playlist","contextValue","playlists","find","lists","id","playlistId","render","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CACA;;AAGA,eAAe,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AAEnDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa,EAAb;AAIH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,UAAU,CAAC,KAAKC,OAAL,EAAD,EAAiB,IAAjB,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GAdkD,CAenD;AACA;;;AACAF,EAAAA,OAAO,GAAG;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAA7B;AACA,QAAIC,QAAQ,GAAG,KAAKC,YAAL,CAAkBC,SAAlB,CAA4BC,IAA5B,CAAiCC,KAAK,IAAI;AACrD,aAAOA,KAAK,CAACC,EAAN,KAAa,KAAKd,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBO,UAA5C;AACH,KAFc,CAAf;AAGAV,IAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ,EALM,CAMN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEH;;AACDO,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEMC,KAAD,IAAW;AACR,WAAKP,YAAL,GAAoBO,KAApB;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ,EAFQ,CAGR;AACA;AACA;AAEA;AACA;AACA;;AAEA,0BACI;AAAK,QAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAS,QAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAFJ,CADJ;AAYH,KAzBL,CADJ;AA+BH;;AAjFkD","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PlaylistContext from '../PlaylistContext'\nimport config from '../config'\n// import './Landing.css'\n\n\nexport default class PlaylistDisplay extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n\n        }\n\n    }\n\n    componentDidUpdate() {\n        setTimeout(this.fetcher(), 1000);\n        console.log(\"running\")\n    }\n    // <PlaylistContext.Consumer>\n    //     {(value) => {\n    fetcher() {\n        console.log(this.props.match.params)\n        let playlist = this.contextValue.playlists.find(lists => {\n            return lists.id === this.props.match.params.playlistId\n        })\n        console.log(playlist)\n        // return <div>{playlist}</div>\n        // return playlist\n        // fetch(config.ENDPOINT + '/data', {\n        //     method: 'POST',\n        //     headers: {\n        //         'content-type': 'application/json'\n        //     },\n        //     body: JSON.stringify(tinsel),\n        // })\n        //     .then(res => {\n\n        //         if (!res.ok)\n        //             return res.json().then(e => Promise.reject(e))\n        //         return res.json()\n        //     }).then(res => {\n        //         console.log(res)\n        //         // this.props.history.push(`/playlist-display/${created.id}`)\n        //     }).catch(error => {\n        //         console.error({ error })\n        //     })\n        // }\n        // }\n\n        // </PlaylistContext.Consumer>\n\n    }\n    render() {\n        return (\n            <PlaylistContext.Consumer>\n\n                {(value) => {\n                    this.contextValue = value\n                    console.log(value)\n                    // const output = value.notes.find(note =>\n                    //     note.id === parseInt(this.props.match.params.noteId)\n                    // )\n\n                    // const folder = value.folders.find(folder =>\n                    //     folder.id === output.folder_id\n                    // )\n\n                    return (\n                        <div id=\"noteDisplay\">\n                            <h2>here</h2>\n                            <article className=\"displayed\">\n\n                                {/* <NoteError> */}\n                                {/* <Note id={output.id} name={output.name} content={output.content} mod={output.modified} key={output.id} history={this.props.history} /> */}\n                                <p></p>\n                                {/* </NoteError> */}\n                            </article>\n                        </div>\n                    )\n                }\n                }\n            </PlaylistContext.Consumer >\n        )\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}