{"ast":null,"code":"var _jsxFileName = \"/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Playlists/Song.js\";\nimport React from 'react';\nimport './Song.css';\nimport { Link } from 'react-router-dom';\nimport PlaylistContext from '../PlaylistContext';\nimport PropTypes from 'prop-types';\nimport config from '../config';\nexport default function Song(props) {\n  // let date = <Moment format=\"Do of MMM YYYY\">\n  //     {props.mod}\n  // </Moment>\n  // let handleClickDelete = (value) => {\n  //     const noteId = props.id\n  //     fetch(`${config.note_end}/${noteId}`, {\n  //         method: 'DELETE',\n  //         headers: {\n  //             'content-type': 'application/json'\n  //         },\n  //     })\n  //         .then(res => {\n  //             if (!res.ok)\n  //                 return res.json().then(e => Promise.reject(e))\n  //             // return res.json()\n  //         })\n  //         .then(() => {\n  //             value.deleteNote(noteId)\n  //         })\n  //         .catch(error => {\n  //             console.error({ error })\n  //         })\n  //     if (props.history)\n  //         props.history.push('/')\n  // }\n  let msConverter = length => {\n    var min = Math.floor(length / 60000);\n    var sec = (length % 60000 / 1000).toFixed(0);\n    return min + \":\" + (sec < 10 ? '0' : '') + sec;\n  };\n\n  let timeOut = msConverter(props.track.length);\n  let artistOut = proprs.track.artist.join(', ');\n  return (\n    /*#__PURE__*/\n    // <NoteContext.Consumer>\n    // {(value) => {\n    // return (\n    React.createElement(\"div\", {\n      className: \"song-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      target: \"_blank\",\n      href: props.track.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, props.track.title)), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"by: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, timeOut)) // )\n    // }\n    // }\n    // </NoteContext.Consumer>\n\n  );\n} // Note.propTypes = {\n//     id: PropTypes.number,\n//     name: PropTypes.string,\n//     content: PropTypes.string,\n//     mod: PropTypes.string,\n// }","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Playlists/Song.js"],"names":["React","Link","PlaylistContext","PropTypes","config","Song","props","msConverter","length","min","Math","floor","sec","toFixed","timeOut","track","artistOut","proprs","artist","join","url","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAChC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,MAAIC,WAAW,GAAIC,MAAD,IAAY;AAC1B,QAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAG,KAApB,CAAV;AACA,QAAII,GAAG,GAAG,CAAEJ,MAAM,GAAG,KAAV,GAAmB,IAApB,EAA0BK,OAA1B,CAAkC,CAAlC,CAAV;AACA,WAAOJ,GAAG,GAAG,GAAN,IAAaG,GAAG,GAAG,EAAN,GAAW,GAAX,GAAiB,EAA9B,IAAoCA,GAA3C;AACH,GAJD;;AAMA,MAAIE,OAAO,GAAGP,WAAW,CAACD,KAAK,CAACS,KAAN,CAAYP,MAAb,CAAzB;AACA,MAAIQ,SAAS,GAAGC,MAAM,CAACF,KAAP,CAAaG,MAAb,CAAoBC,IAApB,CAAyB,IAAzB,CAAhB;AACA;AAAA;AACI;AACA;AACA;AACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAG,MAAA,MAAM,EAAC,QAAV;AAAmB,MAAA,IAAI,EAAEb,KAAK,CAACS,KAAN,CAAYK,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKd,KAAK,CAACS,KAAN,CAAYM,KAAjB,CADJ,CAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOP,OAAP,CANJ,CAJJ,CAeI;AACA;AACA;AACA;;AAlBJ;AAoBH,C,CAED;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport './Song.css'\nimport { Link } from 'react-router-dom'\nimport PlaylistContext from '../PlaylistContext'\nimport PropTypes from 'prop-types'\nimport config from '../config'\n\nexport default function Song(props) {\n    // let date = <Moment format=\"Do of MMM YYYY\">\n    //     {props.mod}\n    // </Moment>\n\n    // let handleClickDelete = (value) => {\n    //     const noteId = props.id\n    //     fetch(`${config.note_end}/${noteId}`, {\n    //         method: 'DELETE',\n    //         headers: {\n    //             'content-type': 'application/json'\n    //         },\n    //     })\n    //         .then(res => {\n    //             if (!res.ok)\n    //                 return res.json().then(e => Promise.reject(e))\n    //             // return res.json()\n    //         })\n    //         .then(() => {\n    //             value.deleteNote(noteId)\n    //         })\n    //         .catch(error => {\n    //             console.error({ error })\n    //         })\n\n    //     if (props.history)\n    //         props.history.push('/')\n    // }\n\n    let msConverter = (length) => {\n        var min = Math.floor(length / 60000);\n        var sec = ((length % 60000) / 1000).toFixed(0);\n        return min + \":\" + (sec < 10 ? '0' : '') + sec;\n    }\n\n    let timeOut = msConverter(props.track.length)\n    let artistOut = proprs.track.artist.join(', ')\n    return (\n        // <NoteContext.Consumer>\n        // {(value) => {\n        // return (\n        <div className=\"song-item\">\n            {/* <Link to={} className=\"title\"> */}\n            <a target='_blank' href={props.track.url}>\n                <h2>{props.track.title}</h2>\n            </a>\n            <span>by: </span>\n            <span>{timeOut}</span>\n            {/* </Link> */}\n            {/* <p>{\"Date modified on \"}{date}</p> */}\n            {/* <button className=\"delete\" onClick={() => handleClickDelete(value)}>Delete Note</button> */}\n        </div>\n        // )\n        // }\n        // }\n        // </NoteContext.Consumer>\n    )\n}\n\n// Note.propTypes = {\n//     id: PropTypes.number,\n//     name: PropTypes.string,\n//     content: PropTypes.string,\n//     mod: PropTypes.string,\n// } \n"]},"metadata":{},"sourceType":"module"}