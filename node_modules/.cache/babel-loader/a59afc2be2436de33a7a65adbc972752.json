{"ast":null,"code":"import _classCallCheck from\"/Users/Nas/Desktop/Thinkful/static-playlist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Nas/Desktop/Thinkful/static-playlist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/Nas/Desktop/Thinkful/static-playlist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/Nas/Desktop/Thinkful/static-playlist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Playlist from'./Playlist';import'./Playlist-Display.css';import playStore from'../playStore';import songStore from'../songStore';// import './Landing.css'\nvar PlaylistDisplay=/*#__PURE__*/function(_Component){_inherits(PlaylistDisplay,_Component);var _super=_createSuper(PlaylistDisplay);function PlaylistDisplay(props){var _this;_classCallCheck(this,PlaylistDisplay);_this=_super.call(this,props);_this._isMounted=false;_this.setPlaylistId=function(playlistId){_this.setState({playlistId:playlistId});};_this.setPlaylist=function(playlist){_this.setState({playlist:playlist});};_this.addSongs=function(song){_this.setState({song:song});};_this.mounter=function(value){var playlistOut=value.playlists.find(function(playlist){return playlist.id===_this.props.match.params.playlistId;});console.log(playlistOut);_this.setPlaylist(playlistOut);};_this.state={playlistId:_this.props.match.params.playlistId,playlist:null,song:[],isFlushed:false};return _this;}_createClass(PlaylistDisplay,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this._isMounted=true;var playlistId=this.props.match.params.playlistId;console.log(playlistId);var playlist=window.globe.playStore.find(function(playlist){console.log(playlist);return playlist.id==_this2.props.match.params.playlistId;});console.log(playlist);console.log(songStore);this.setPlaylist(playlist);var runtime=0;var i=0;var songArray=[];while(runtime<playlist.length){// console.log(i)\nvar song={id:songStore[i].id,url:songStore[i].url,name:songStore[i].title,length:songStore[i].length,explicit:songStore[i].explicit};// console.log(song)\nsongArray.push(song);runtime+=song.length;i++;}this.addSongs(songArray);console.log(songArray);}},{key:\"render\",value:function render(){if(this.state.playlist===null)return/*#__PURE__*/React.createElement(\"h1\",null,\"Loading..\");// let songDisplay = this.state.songs.map(song => {\n//     return <Song track={song} key={song.id} />\n// })\nreturn/*#__PURE__*/ (// <PlaylistContext.Consumer>\n//     {(value) => {\n//         let output = this.mounter(value)\n//         console.log(output)\n//         return output && (\nReact.createElement(Playlist,{playlist:this.state.playlist,songs:this.state.song})//     )\n// }\n// }\n// </PlaylistContext.Consumer>\n// )\n// {/* } */}\n// }\n// {/* </PlaylistContext.Consumer > */}\n);}}]);return PlaylistDisplay;}(Component);export{PlaylistDisplay as default};","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/static-playlist/src/Playlists/Playlist-Display.js"],"names":["React","Component","Playlist","playStore","songStore","PlaylistDisplay","props","_isMounted","setPlaylistId","playlistId","setState","setPlaylist","playlist","addSongs","song","mounter","value","playlistOut","playlists","find","id","match","params","console","log","state","isFlushed","window","globe","runtime","i","songArray","length","url","name","title","explicit","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Playlist from './Playlist'\nimport './Playlist-Display.css'\nimport playStore from '../playStore'\nimport songStore from '../songStore'\n// import './Landing.css'\n\n\nexport default class PlaylistDisplay extends Component {\n    _isMounted = false;\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            playlistId: this.props.match.params.playlistId,\n            playlist: null,\n            song: [],\n            isFlushed: false\n        }\n    }\n\n    setPlaylistId = (playlistId) => {\n        this.setState({ playlistId })\n    }\n\n    setPlaylist = (playlist) => {\n        this.setState({ playlist })\n    }\n\n    addSongs = (song) => {\n        this.setState({\n            song\n        })\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        let playlistId = this.props.match.params.playlistId\n        console.log(playlistId)\n\n        let playlist = window.globe.playStore.find(playlist => {\n            console.log(playlist)\n            return playlist.id == this.props.match.params.playlistId\n        })\n        console.log(playlist)\n        console.log(songStore)\n        this.setPlaylist(playlist)\n        let runtime = 0\n        let i = 0;\n        let songArray = []\n\n        while (runtime < playlist.length) {\n            // console.log(i)\n            let song = {\n                id: songStore[i].id,\n                url: songStore[i].url,\n                name: songStore[i].title,\n                length: songStore[i].length,\n                explicit: songStore[i].explicit,\n            }\n            // console.log(song)\n            songArray.push(song)\n            runtime += song.length\n            i++;\n        }\n        this.addSongs(songArray)\n        console.log(songArray)\n\n    }\n\n    mounter = (value) => {\n        let playlistOut = value.playlists.find(playlist => {\n            return playlist.id === this.props.match.params.playlistId\n        })\n        console.log(playlistOut)\n        this.setPlaylist(playlistOut)\n    }\n\n\n    render() {\n        if (this.state.playlist === null) return <h1>Loading..</h1>;\n\n        // let songDisplay = this.state.songs.map(song => {\n        //     return <Song track={song} key={song.id} />\n        // })\n        return (\n            // <PlaylistContext.Consumer>\n            //     {(value) => {\n            //         let output = this.mounter(value)\n            //         console.log(output)\n            //         return output && (\n            <Playlist playlist={this.state.playlist} songs={this.state.song} />\n            //     )\n            // }\n            // }\n\n            // </PlaylistContext.Consumer>\n            // )\n            // {/* } */}\n            // }\n            // {/* </PlaylistContext.Consumer > */}\n\n        )\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}