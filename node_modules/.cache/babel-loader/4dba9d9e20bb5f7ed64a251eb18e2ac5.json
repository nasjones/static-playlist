{"ast":null,"code":"var _jsxFileName = \"/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Playlists/Playlist-Display.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PlaylistContext from '../PlaylistContext';\nimport config from '../config'; // import './Landing.css'\n\nexport default class PlaylistDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    let tinsel = {\n      help: 'here'\n    }; // console.log(JSON.stringify(tinsel))\n\n    fetch(config.ENDPOINT + '/data', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(tinsel)\n    }).then(res => {\n      if (!res.ok) return res.json().then(e => Promise.reject(e));\n      return res.json();\n    }).then(res => {\n      console.log(res); // this.props.history.push(`/playlist-display/${created.id}`)\n    }).catch(error => {\n      console.error({\n        error\n      });\n    }); // fetch(config.ENDPOINT + '/data',\n    //     {\n    //         method: 'POST',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //         },\n    //         body: JSON.stringify(test)\n    //     })\n    //     .then(tracksRes => {\n    //         if (!tracksRes.ok)\n    //             return tracksRes.json().then(error => Promise.reject(error))\n    //         return tracksRes.json()\n    //     })\n    //     .then(tracks => {\n    //         // this.setPlaylists(playlist)\n    //         console.log(tracks)\n    //     })\n    //     .catch(error => {\n    //         console.error({ error });\n    //         this.setState({ error })\n    //     });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(PlaylistContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, value => {\n      console.log(value); // const output = value.notes.find(note =>\n      //     note.id === parseInt(this.props.match.params.noteId)\n      // )\n      // const folder = value.folders.find(folder =>\n      //     folder.id === output.folder_id\n      // )\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"noteDisplay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"navBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.props.history.goBack(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        id: \"back\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 37\n        }\n      }, \"Go Back\")), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }\n      }, \"here\")), /*#__PURE__*/React.createElement(\"article\", {\n        className: \"displayed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }\n      })));\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Playlists/Playlist-Display.js"],"names":["React","Component","Link","PlaylistContext","config","PlaylistDisplay","constructor","props","state","componentDidMount","console","log","tinsel","help","fetch","ENDPOINT","method","headers","body","JSON","stringify","then","res","ok","json","e","Promise","reject","catch","error","render","value","history","goBack"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CACA;;AAGA,eAAe,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AAEnDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AACA,QAAIK,MAAM,GAAG;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb,CAFgB,CAKhB;;AAEAC,IAAAA,KAAK,CAACV,MAAM,CAACW,QAAP,GAAkB,OAAnB,EAA4B;AAC7BC,MAAAA,MAAM,EAAE,MADqB;AAE7BC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFoB;AAK7BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,MAAf;AALuB,KAA5B,CAAL,CAOKS,IAPL,CAOUC,GAAG,IAAI;AAET,UAAI,CAACA,GAAG,CAACC,EAAT,EACI,OAAOD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBI,CAAC,IAAIC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAArB,CAAP;AACJ,aAAOH,GAAG,CAACE,IAAJ,EAAP;AACH,KAZL,EAYOH,IAZP,CAYYC,GAAG,IAAI;AACXZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ,EADW,CAEX;AACH,KAfL,EAeOM,KAfP,CAeaC,KAAK,IAAI;AACdnB,MAAAA,OAAO,CAACmB,KAAR,CAAc;AAAEA,QAAAA;AAAF,OAAd;AACH,KAjBL,EAPgB,CAyBhB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEMC,KAAD,IAAW;AACRrB,MAAAA,OAAO,CAACC,GAAR,CAAYoB,KAAZ,EADQ,CAER;AACA;AACA;AAEA;AACA;AACA;;AAEA,0BACI;AAAK,QAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKxB,KAAL,CAAWyB,OAAX,CAAmBC,MAAnB,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,EAAE,EAAC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADJ,eAQI;AAAS,QAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CARJ,CADJ;AAiBH,KA7BL,CADJ;AAmCH;;AA/FkD","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PlaylistContext from '../PlaylistContext'\nimport config from '../config'\n// import './Landing.css'\n\n\nexport default class PlaylistDisplay extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props)\n        let tinsel = {\n            help: 'here'\n        }\n        // console.log(JSON.stringify(tinsel))\n\n        fetch(config.ENDPOINT + '/data', {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(tinsel),\n        })\n            .then(res => {\n\n                if (!res.ok)\n                    return res.json().then(e => Promise.reject(e))\n                return res.json()\n            }).then(res => {\n                console.log(res)\n                // this.props.history.push(`/playlist-display/${created.id}`)\n            }).catch(error => {\n                console.error({ error })\n            })\n        // fetch(config.ENDPOINT + '/data',\n        //     {\n        //         method: 'POST',\n        //         headers: {\n        //             'content-type': 'application/json',\n        //         },\n        //         body: JSON.stringify(test)\n\n        //     })\n        //     .then(tracksRes => {\n        //         if (!tracksRes.ok)\n        //             return tracksRes.json().then(error => Promise.reject(error))\n\n        //         return tracksRes.json()\n        //     })\n        //     .then(tracks => {\n        //         // this.setPlaylists(playlist)\n        //         console.log(tracks)\n\n        //     })\n        //     .catch(error => {\n        //         console.error({ error });\n        //         this.setState({ error })\n        //     });\n    }\n    render() {\n        return (\n            <PlaylistContext.Consumer>\n\n                {(value) => {\n                    console.log(value)\n                    // const output = value.notes.find(note =>\n                    //     note.id === parseInt(this.props.match.params.noteId)\n                    // )\n\n                    // const folder = value.folders.find(folder =>\n                    //     folder.id === output.folder_id\n                    // )\n\n                    return (\n                        <div id=\"noteDisplay\">\n                            <div id=\"navBar\">\n                                <button onClick={() => this.props.history.goBack()}>\n                                    <h2 id=\"back\">Go Back</h2>\n\n                                </button>\n                                <h2>here</h2>\n                            </div>\n                            <article className=\"displayed\">\n                                {/* <NoteError> */}\n                                {/* <Note id={output.id} name={output.name} content={output.content} mod={output.modified} key={output.id} history={this.props.history} /> */}\n                                <p></p>\n                                {/* </NoteError> */}\n                            </article>\n                        </div>\n                    )\n                }\n                }\n            </PlaylistContext.Consumer >\n        )\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}