{"ast":null,"code":"var _jsxFileName = \"/Users/Nas/Desktop/Thinkful/static-playlist/src/Nav.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Nav.css';\nimport PlaylistContext from './PlaylistContext';\nexport default function Nav(props) {\n  let output = value => {\n    if (window.globe.playStore.length > 10) {\n      return window.globe.playStore.slice(window.globe.playStore.length - 11, window.globe.playStore.length - 1).map(playlist => {\n        let genre = window.globe.genreStore.find(genre => {\n          return genre.id == playlist.genre_id;\n        });\n        return genre && /*#__PURE__*/React.createElement(Link, {\n          exact: \"true\",\n          key: playlist.id,\n          to: `/playlist-display/${playlist.id}`,\n          onClick: props.clicker,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"article\", {\n          className: \"navLink\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          id: playlist.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 29\n          }\n        }, playlist.name), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }\n        }, \"Genre:\", genre.name)));\n      });\n    } else {\n      return window.globe.playStore.map(playlist => {\n        let genre = window.globe.genreStore.find(genre => {\n          return genre.id == playlist.genre_id;\n        });\n        return genre && /*#__PURE__*/React.createElement(Link, {\n          exact: \"true\",\n          key: playlist.id,\n          to: `/playlist-display/${playlist.id}`,\n          onClick: e => props.clicker(playlist.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"article\", {\n          className: \"navLink\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          id: playlist.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }\n        }, playlist.name), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }\n        }, \"Genre:\", genre.name)));\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(PlaylistContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, value => {\n    let playlistOut = output(value);\n\n    if (window.globe) {\n      return playlistOut && /*#__PURE__*/React.createElement(\"div\", {\n        id: \"navBar\",\n        className: \"hidden\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        id: \"recent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }\n      }, \"Most Recent\"), playlistOut, /*#__PURE__*/React.createElement(Link, {\n        to: '/existing-playlists',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"navLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }\n      }, \"See all playlists!\")), /*#__PURE__*/React.createElement(Link, {\n        to: '/homepage',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"navLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }\n      }, \"Create a playlist\")));\n    } else {\n      return playlistOut && /*#__PURE__*/React.createElement(\"div\", {\n        id: \"navBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        id: \"recent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }, \"Most Recent\"), playlistOut, /*#__PURE__*/React.createElement(Link, {\n        to: '/existing-playlists',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"navLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }, \"See all playlists!\")), /*#__PURE__*/React.createElement(Link, {\n        to: '/homepage',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"navLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }\n      }, \"Create a playlist\")));\n    }\n  });\n}","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/static-playlist/src/Nav.js"],"names":["React","Link","PlaylistContext","Nav","props","output","value","window","globe","playStore","length","slice","map","playlist","genre","genreStore","find","id","genre_id","clicker","name","e","playlistOut"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Nav.css'\nimport PlaylistContext from './PlaylistContext'\n\n\nexport default function Nav(props) {\n\n    let output = (value) => {\n        if (window.globe.playStore.length > 10) {\n            return window.globe.playStore.slice(window.globe.playStore.length - 11, window.globe.playStore.length - 1).map(playlist => {\n                let genre = window.globe.genreStore.find(genre => {\n                    return genre.id == playlist.genre_id\n                })\n\n                return genre && (\n                    <Link exact=\"true\" key={playlist.id} to={`/playlist-display/${playlist.id}`} onClick={props.clicker}>\n                        <article className=\"navLink\">\n                            <h3 id={playlist.id} >{playlist.name}</h3>\n                            <span>Genre:{genre.name}</span>\n                        </article>\n                    </Link>\n                )\n            })\n        }\n        else {\n            return window.globe.playStore.map(playlist => {\n                let genre = window.globe.genreStore.find(genre => {\n                    return genre.id == playlist.genre_id\n                })\n\n                return genre && (\n                    <Link exact=\"true\" key={playlist.id} to={`/playlist-display/${playlist.id}`} onClick={e => props.clicker(playlist.id)}>\n                        <article className=\"navLink\">\n                            <h3 id={playlist.id} >{playlist.name}</h3>\n                            <span>Genre:{genre.name}</span>\n                        </article>\n                    </Link>\n                )\n            })\n        }\n    };\n\n\n    return (\n        <PlaylistContext.Consumer>\n            {(value) => {\n                let playlistOut = output(value)\n                if (window.globe) {\n                    return playlistOut && (\n\n                        <div id=\"navBar\" className=\"hidden\">\n                            <h2 id=\"recent\">Most Recent</h2>\n                            {playlistOut}\n                            <Link to={'/existing-playlists'}  >\n                                <h3 className=\"navLink\">See all playlists!</h3>\n                            </Link>\n                            <Link to={'/homepage'}  >\n                                <h3 className=\"navLink\">Create a playlist</h3>\n                            </Link>\n                        </div>\n                    )\n                }\n                else {\n                    return playlistOut && (\n\n                        <div id=\"navBar\" >\n                            <h2 id=\"recent\">Most Recent</h2>\n                            {playlistOut}\n                            <Link to={'/existing-playlists'}  >\n                                <h3 className=\"navLink\">See all playlists!</h3>\n                            </Link>\n                            <Link to={'/homepage'}  >\n                                <h3 className=\"navLink\">Create a playlist</h3>\n                            </Link>\n                        </div>\n                    )\n                }\n\n            }\n            }\n        </PlaylistContext.Consumer>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}