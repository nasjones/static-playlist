{"ast":null,"code":"var _jsxFileName = \"/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport config from './config';\nimport PlaylistContext from './PlaylistContext';\nimport Landing from './LandingPage/Landing';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      genres: [],\n      playlists: [],\n      user: null,\n      error: null\n    };\n\n    this.setGenres = genres => {\n      this.setState({\n        genres,\n        user: this.state.user,\n        error: this.state.error\n      });\n    };\n  }\n\n  componentDidMount() {\n    let endpoint = config.ENDPOINT;\n    Promise.all([fetch(endpoint), fetch(endpoint + '/genres')], {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(([apiKeyRes, genreRes]) => {\n      if (!apiKeyRes.ok) return apiKeyRes.json().then(error => Promise.reject(error));\n      if (!genreRes.ok) return genreRes.json().then(error => Promise.reject(error));\n      return Promise.all([apiKeyRes.json(), genreRes.json()]);\n    }).then(([apiKey, genres]) => {\n      this.setGenres(genres);\n    }).catch(error => {\n      console.error({\n        error\n      });\n      this.setState({\n        error\n      });\n    });\n  }\n\n  render() {\n    const contextValue = {\n      genres: this.state.genres,\n      playlists: this.state.playlists\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: '/',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, \"Playlist-maker\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(PlaylistContext.Provider, {\n      value: contextValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      id: \"stage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Landing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/App.js"],"names":["React","Component","Route","Link","Switch","config","PlaylistContext","Landing","App","state","genres","playlists","user","error","setGenres","setState","componentDidMount","endpoint","ENDPOINT","Promise","all","fetch","method","headers","then","apiKeyRes","genreRes","ok","json","reject","apiKey","catch","console","render","contextValue"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport config from './config';\nimport PlaylistContext from './PlaylistContext'\nimport Landing from './LandingPage/Landing'\n\nclass App extends Component {\n  state = {\n    genres: [],\n    playlists: [],\n    user: null,\n    error: null,\n  }\n\n  setGenres = genres => {\n    this.setState({\n      genres,\n      user: this.state.user,\n      error: this.state.error,\n    })\n  }\n\n  componentDidMount() {\n    let endpoint = config.ENDPOINT\n    Promise.all([\n      fetch(endpoint),\n      fetch(endpoint + '/genres')\n    ],\n      {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n        },\n      })\n      .then(([apiKeyRes, genreRes]) => {\n        if (!apiKeyRes.ok)\n          return apiKeyRes.json().then(error => Promise.reject(error))\n        if (!genreRes.ok)\n          return genreRes.json().then(error => Promise.reject(error))\n        return Promise.all([apiKeyRes.json(), genreRes.json()])\n      })\n      .then(([apiKey, genres]) => {\n        this.setGenres(genres)\n      })\n      .catch(error => {\n        console.error({ error });\n        this.setState({ error })\n      });\n  }\n\n  render() {\n    const contextValue = {\n      genres: this.state.genres,\n      playlists: this.state.playlists\n    }\n\n    return (\n      <div className=\"App\" >\n        <header className=\"App-header\">\n          <Link to={'/'}>\n            <h1>Playlist-maker</h1>\n          </Link>\n          <hr />\n        </header>\n        <PlaylistContext.Provider value={contextValue}>\n          <main id=\"stage\">\n            <Switch>\n              <Route exact path='/' component={Landing} />\n            </Switch>\n\n          </main>\n        </PlaylistContext.Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}