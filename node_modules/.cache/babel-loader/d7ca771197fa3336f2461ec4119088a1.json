{"ast":null,"code":"var _jsxFileName = \"/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link, Switch } from 'react-router-dom'; // import logo from './logo.svg';\n\nimport './App.css';\nimport config from './config';\nimport PlaylistContext from './PlaylistContext';\nimport Landing from './Landingpage/Landing';\nimport Homepage from './Homepage/Homepage';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      genres: [],\n      playlists: [],\n      user: null,\n      error: null\n    };\n\n    this.setGenres = genres => {\n      this.setState({\n        genres,\n        user: this.state.user,\n        error: this.state.error\n      });\n    };\n\n    this.setPlaylists = playlists => {\n      this.setState({\n        playlists,\n        user: this.state.user,\n        error: this.state.error\n      });\n    };\n\n    this.pageUpdate = () => {\n      this.componentDidUpdate();\n    };\n  }\n\n  componentDidMount() {\n    let endpoint = config.ENDPOINT;\n    Promise.all([fetch(endpoint + '/playlists'), fetch(endpoint + '/genres')], {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(([playlistRes, genreRes]) => {\n      if (!playlistRes.ok) return playlistRes.json().then(error => Promise.reject(error));\n      if (!genreRes.ok) return genreRes.json().then(error => Promise.reject(error));\n      return Promise.all([playlistRes, genreRes.json()]);\n    }).then(([playlist, genres]) => {\n      this.setPlaylists(playlist);\n      this.setGenres(genres);\n    }).catch(error => {\n      console.error({\n        error\n      });\n      this.setState({\n        error\n      });\n    });\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    const contextValue = {\n      genres: this.state.genres,\n      playlists: this.state.playlists\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: '/',\n      id: \"home-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, \"ShowTunes\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(PlaylistContext.Provider, {\n      value: contextValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      id: \"stage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Landing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/homepage\",\n      component: Homepage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/existing-playlists\",\n      component: Homepage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/App.js"],"names":["React","Component","Route","Link","Switch","config","PlaylistContext","Landing","Homepage","App","state","genres","playlists","user","error","setGenres","setState","setPlaylists","pageUpdate","componentDidUpdate","componentDidMount","endpoint","ENDPOINT","Promise","all","fetch","method","headers","then","playlistRes","genreRes","ok","json","reject","playlist","catch","console","render","contextValue"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\n// import logo from './logo.svg';\nimport './App.css';\nimport config from './config';\nimport PlaylistContext from './PlaylistContext'\nimport Landing from './Landingpage/Landing'\nimport Homepage from './Homepage/Homepage'\n\nclass App extends Component {\n  state = {\n    genres: [],\n    playlists: [],\n    user: null,\n    error: null,\n  }\n\n  setGenres = genres => {\n    this.setState({\n      genres,\n      user: this.state.user,\n      error: this.state.error,\n    })\n  }\n\n  setPlaylists = playlists => {\n    this.setState({\n      playlists,\n      user: this.state.user,\n      error: this.state.error,\n    })\n  }\n\n  componentDidMount() {\n    let endpoint = config.ENDPOINT\n    Promise.all([\n      fetch(endpoint + '/playlists'),\n      fetch(endpoint + '/genres')\n    ],\n      {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n        },\n      })\n      .then(([playlistRes, genreRes]) => {\n        if (!playlistRes.ok)\n          return playlistRes.json().then(error => Promise.reject(error))\n        if (!genreRes.ok)\n          return genreRes.json().then(error => Promise.reject(error))\n        return Promise.all([playlistRes, genreRes.json()])\n      })\n      .then(([playlist, genres]) => {\n        this.setPlaylists(playlist)\n        this.setGenres(genres)\n      })\n      .catch(error => {\n        console.error({ error });\n        this.setState({ error })\n      });\n  }\n\n  componentDidUpdate() {\n\n  }\n\n  pageUpdate = () => {\n    this.componentDidUpdate()\n  }\n\n  render() {\n    const contextValue = {\n      genres: this.state.genres,\n      playlists: this.state.playlists\n    }\n\n    return (\n      <div className=\"App\" >\n        <header className=\"App-header\">\n          <Link to={'/'} id=\"home-link\">\n            <h1>ShowTunes</h1>\n          </Link>\n          <hr />\n        </header>\n        <PlaylistContext.Provider value={contextValue}>\n          <main id=\"stage\">\n            <Switch>\n              <Route exact path='/' component={Landing} />\n              <Route path='/homepage' component={Homepage} />\n              <Route path='/existing-playlists' component={Homepage} />\n            </Switch>\n\n          </main>\n        </PlaylistContext.Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}