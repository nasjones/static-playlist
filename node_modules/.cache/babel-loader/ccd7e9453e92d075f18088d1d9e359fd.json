{"ast":null,"code":"import _slicedToArray from\"/Users/Nas/Desktop/Thinkful/playlist-maker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/Users/Nas/Desktop/Thinkful/playlist-maker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Nas/Desktop/Thinkful/playlist-maker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/Nas/Desktop/Thinkful/playlist-maker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/Nas/Desktop/Thinkful/playlist-maker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Route,Link,Switch}from'react-router-dom';import'./App.css';import config from'./config';import PlaylistContext from'./PlaylistContext';import Landing from'./Landingpage/Landing';import Homepage from'./Homepage/Homepage';import PlaylistDisplay from'./Playlists/Playlist-Display';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={genres:[],playlists:[],// records: [],\nuser:null,error:null};_this.setGenres=function(genres){_this.setState({genres:genres});};_this.setPlaylists=function(playlists){_this.setState({playlists:playlists});};_this.fetcher=function(){var endpoint=config.ENDPOINT;Promise.all([fetch(endpoint+'/playlists'),fetch(endpoint+'/genres'),fetch(endpoint+'/auth')],{method:'GET',headers:{'content-type':'application/json'}}).then(function(_ref){var _ref2=_slicedToArray(_ref,3),playlistRes=_ref2[0],genreRes=_ref2[1],authRes=_ref2[2];if(!playlistRes.ok)return playlistRes.json().then(function(error){return Promise.reject(error);});if(!genreRes.ok)return genreRes.json().then(function(error){return Promise.reject(error);});if(!authRes.ok)return authRes.json().then(function(error){return Promise.reject(error);});return Promise.all([playlistRes.json(),genreRes.json(),authRes.json()]);}).then(function(_ref3){var _ref4=_slicedToArray(_ref3,3),playlist=_ref4[0],genres=_ref4[1],auth=_ref4[2];_this.setPlaylists(playlist);_this.setGenres(genres);console.log(auth);}).catch(function(error){console.error({error:error});});};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.fetcher();}// pageUpdate = () => {\n//   this.componentDidMount()\n// }\n},{key:\"render\",value:function render(){var contextValue={genres:this.state.genres,playlists:this.state.playlists,pageUpdate:this.fetcher};return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"header\",{className:\"App-header\"},/*#__PURE__*/React.createElement(Link,{to:'/',id:\"home-link\"},/*#__PURE__*/React.createElement(\"h1\",null,\"ShowTunes\")),/*#__PURE__*/React.createElement(\"hr\",null)),/*#__PURE__*/React.createElement(PlaylistContext.Provider,{value:contextValue},/*#__PURE__*/React.createElement(\"main\",{id:\"stage\"},/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/\",component:Landing}),/*#__PURE__*/React.createElement(Route,{path:\"/homepage\",component:Homepage}),/*#__PURE__*/React.createElement(Route,{path:\"/existing-playlists\",component:Homepage}),/*#__PURE__*/React.createElement(Route,{path:\"/playlist-display/:playlistId\",component:PlaylistDisplay})))));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/App.js"],"names":["React","Component","Route","Link","Switch","config","PlaylistContext","Landing","Homepage","PlaylistDisplay","App","state","genres","playlists","user","error","setGenres","setState","setPlaylists","fetcher","endpoint","ENDPOINT","Promise","all","fetch","method","headers","then","playlistRes","genreRes","authRes","ok","json","reject","playlist","auth","console","log","catch","contextValue","pageUpdate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport './App.css';\nimport config from './config';\nimport PlaylistContext from './PlaylistContext'\nimport Landing from './Landingpage/Landing'\nimport Homepage from './Homepage/Homepage'\nimport PlaylistDisplay from './Playlists/Playlist-Display'\n\nclass App extends Component {\n\n  state = {\n    genres: [],\n    playlists: [],\n    // records: [],\n    user: null,\n    error: null,\n  }\n\n  setGenres = genres => {\n    this.setState({\n      genres\n    })\n  }\n\n  setPlaylists = playlists => {\n    this.setState({\n      playlists\n    })\n  }\n\n  fetcher = () => {\n    let endpoint = config.ENDPOINT\n    Promise.all([\n      fetch(endpoint + '/playlists'),\n      fetch(endpoint + '/genres'),\n\n      fetch(endpoint + '/auth')\n    ],\n      {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n        },\n      })\n      .then(([playlistRes, genreRes, authRes]) => {\n        if (!playlistRes.ok)\n          return playlistRes.json().then(error => Promise.reject(error))\n        if (!genreRes.ok)\n          return genreRes.json().then(error => Promise.reject(error))\n        if (!authRes.ok)\n          return authRes.json().then(error => Promise.reject(error))\n        return Promise.all([playlistRes.json(), genreRes.json(), authRes.json()])\n      })\n      .then(([playlist, genres, auth]) => {\n        this.setPlaylists(playlist)\n        this.setGenres(genres)\n        console.log(auth)\n      })\n      .catch(error => {\n        console.error({ error });\n      });\n  }\n\n  componentDidMount() {\n    this.fetcher()\n  }\n\n  // pageUpdate = () => {\n  //   this.componentDidMount()\n  // }\n\n  render() {\n    const contextValue = {\n      genres: this.state.genres,\n      playlists: this.state.playlists,\n      pageUpdate: this.fetcher,\n    }\n\n    return (\n      <div className=\"App\" >\n        <header className=\"App-header\">\n          <Link to={'/'} id=\"home-link\">\n            <h1>ShowTunes</h1>\n          </Link>\n          <hr />\n        </header>\n        <PlaylistContext.Provider value={contextValue}>\n          <main id=\"stage\">\n            <Switch>\n              <Route exact path='/' component={Landing} />\n              <Route path='/homepage' component={Homepage} />\n              <Route path='/existing-playlists' component={Homepage} />\n              <Route path='/playlist-display/:playlistId' component={PlaylistDisplay} />\n            </Switch>\n          </main>\n        </PlaylistContext.Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}