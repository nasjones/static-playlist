{"ast":null,"code":"import _classCallCheck from\"/Users/Nas/Desktop/Thinkful/playlist-maker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Nas/Desktop/Thinkful/playlist-maker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/Nas/Desktop/Thinkful/playlist-maker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/Nas/Desktop/Thinkful/playlist-maker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router-dom';import PlaylistContext from'../PlaylistContext';import'./Homepage.css';import GenreCheck from'./GenreCheck';import ValidationError from'../ValidationError';import config from'../config';var HomePage=/*#__PURE__*/function(_Component){_inherits(HomePage,_Component);var _super=_createSuper(HomePage);function HomePage(props){var _this;_classCallCheck(this,HomePage);_this=_super.call(this,props);_this._isMounted=false;_this.fieldChange=function(e){_this.setState({selectedId:e.target.id,selectedGen:e.target.value});};_this.titleChange=function(e){_this.setState({title:e.target.value,titleTouch:true});};_this.minChange=function(e){_this.setState({min:parseInt(e.target.value),minTouch:true});};_this.hourChange=function(e){_this.setState({hour:parseInt(e.target.value),hourTouch:true});};_this.minArr=function(){var arr=new Array(60);for(var i=0;i<=59;i++){arr[i]=i;}return arr;};_this.hourArr=function(){var arr=new Array(4);for(var i=0;i<=2;i++){arr[i]=i;}return arr;};_this.validateTime=function(){var hourSelect=_this.state.hour;var minSelect=_this.state.min;if(hourSelect===null||minSelect===null||isNaN(hourSelect)||isNaN(minSelect)||hourSelect===0&&minSelect===0)return\"Select a valid time\";};_this.validateGenre=function(){var genre=_this.state.selectedId;if(genre===null)return\"You must select a genre.\";// if (genres.length > 1)\n//     return \"Sorry only one genre can be selected at a time.\"\n};_this.validateTitle=function(){var titleInput=_this.state.title.trim();if(titleInput.length===0){return\"Title is required.\";}else if(titleInput.length<3){return\"Title must be atleast 3 characters long.\";}};_this.subHandle=function(e,value){e.preventDefault();var time=3600000*_this.state.hour+60000*_this.state.min;var newPlaylist={title:_this.state.title.trim(),length:time,genre_id:_this.state.selectedId,author:1};fetch(\"\".concat(config.ENDPOINT,\"/playlists\"),{method:'POST',headers:{'content-type':'application/json'},body:JSON.stringify(newPlaylist)}).then(function(res){if(!res.ok)return res.json().then(function(e){return Promise.reject(e);});return res.json();}).then(function(res){value.pageUpdate();_this.props.history.push(\"/playlist-display/\".concat(res.id),{genres:value.genres,time:time});}).catch(function(error){console.error({error:error});});};_this.state={title:\"\",titleTouch:false,selectedId:null,selectedGen:null,genTouch:false,hour:null,hourTouch:false,min:null,minTouch:false};return _this;}_createClass(HomePage,[{key:\"componentDidMount\",value:function componentDidMount(){this._isMounted=true;}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._isMounted=false;}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(PlaylistContext.Consumer,null,function(value){var genres=value.genres.map(function(genre){return/*#__PURE__*/React.createElement(GenreCheck,{id:genre.id,name:genre.name,selected:_this2.state.selectedGen,key:genre.id});});var minutes=_this2.minArr().map(function(min){if(min<10)return/*#__PURE__*/React.createElement(\"option\",{value:min,key:min},\"0\",min);else return/*#__PURE__*/React.createElement(\"option\",{value:min,key:min},min);});var hours=_this2.hourArr().map(function(min){return/*#__PURE__*/React.createElement(\"option\",{value:min,key:min},min);});var timeError=_this2.validateTime();var genreError=_this2.validateGenre();var titleError=_this2.validateTitle();return genres&&/*#__PURE__*/React.createElement(\"div\",{id:\"play-stage\"},/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"div\",{id:\"input-wrap\"},/*#__PURE__*/React.createElement(\"div\",{className:\"inputs\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"title-input\"},\"Playlist Name: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"title-input\",onChange:_this2.titleChange,className:\"user-inputs\"}),_this2.state.titleTouch&&/*#__PURE__*/React.createElement(ValidationError,{message:titleError})),/*#__PURE__*/React.createElement(\"div\",{className:\"inputs\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"hour-length\"},\"Playlist length: \"),/*#__PURE__*/React.createElement(\"select\",{onChange:_this2.hourChange,className:\"user-inputs\"},/*#__PURE__*/React.createElement(\"option\",{value:null},\"--Hour(s)--\"),hours),\":\",/*#__PURE__*/React.createElement(\"select\",{onChange:_this2.minChange,className:\"user-inputs\"},/*#__PURE__*/React.createElement(\"option\",{value:null},\"--Minute(s)--\"),minutes),_this2.state.hourTouch&&_this2.state.minTouch&&/*#__PURE__*/React.createElement(ValidationError,{message:timeError}))),/*#__PURE__*/React.createElement(\"fieldset\",{onChange:_this2.fieldChange},/*#__PURE__*/React.createElement(\"legend\",null,\"Choose your genre!\"),_this2.state.genTouch&&/*#__PURE__*/React.createElement(ValidationError,{message:genreError}),/*#__PURE__*/React.createElement(\"div\",{id:\"genres\"},genres)),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",id:\"create\",onClick:function onClick(e){return _this2.subHandle(e,value);},disabled:timeError||genreError||titleError},\"Create your playlist!\")),/*#__PURE__*/React.createElement(Link,{to:'/playlist-display/3'},\"Here\"));});}}]);return HomePage;}(Component);export{HomePage as default};","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Homepage/Homepage.js"],"names":["React","Component","Link","PlaylistContext","GenreCheck","ValidationError","config","HomePage","props","_isMounted","fieldChange","e","setState","selectedId","target","id","selectedGen","value","titleChange","title","titleTouch","minChange","min","parseInt","minTouch","hourChange","hour","hourTouch","minArr","arr","Array","i","hourArr","validateTime","hourSelect","state","minSelect","isNaN","validateGenre","genre","validateTitle","titleInput","trim","length","subHandle","preventDefault","time","newPlaylist","genre_id","author","fetch","ENDPOINT","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","pageUpdate","history","push","genres","catch","error","console","genTouch","map","name","minutes","hours","timeError","genreError","titleError"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PlaylistContext from '../PlaylistContext'\nimport './Homepage.css'\nimport GenreCheck from './GenreCheck'\nimport ValidationError from '../ValidationError'\nimport config from '../config'\n\n\nexport default class HomePage extends Component {\n    _isMounted = false;\n    constructor(props) {\n        super(props)\n        this.state = {\n            title: \"\",\n            titleTouch: false,\n            selectedId: null,\n            selectedGen: null,\n            genTouch: false,\n            hour: null,\n            hourTouch: false,\n            min: null,\n            minTouch: false,\n        }\n    }\n\n    fieldChange = e => {\n\n        this.setState({\n            selectedId: e.target.id,\n            selectedGen: e.target.value\n        })\n    }\n\n    titleChange = e => {\n        this.setState({\n            title: e.target.value,\n            titleTouch: true\n        })\n    }\n\n    minChange = e => {\n        this.setState({\n            min: parseInt(e.target.value),\n            minTouch: true\n        })\n    }\n\n    hourChange = e => {\n        this.setState({\n            hour: parseInt(e.target.value),\n            hourTouch: true\n        })\n    }\n\n    minArr = () => {\n        let arr = new Array(60);\n        for (let i = 0; i <= 59; i++)\n            arr[i] = i\n\n        return arr\n    }\n\n    hourArr = () => {\n        let arr = new Array(4);\n        for (let i = 0; i <= 2; i++)\n            arr[i] = i\n        return arr\n    }\n\n    validateTime = () => {\n        const hourSelect = this.state.hour\n        const minSelect = this.state.min\n        if ((hourSelect === null) || (minSelect === null) || isNaN(hourSelect) || isNaN(minSelect) || (hourSelect === 0 && minSelect === 0))\n            return \"Select a valid time\"\n    }\n\n    validateGenre = () => {\n        const genre = this.state.selectedId\n        if (genre === null)\n            return \"You must select a genre.\"\n        // if (genres.length > 1)\n        //     return \"Sorry only one genre can be selected at a time.\"\n    }\n\n    validateTitle = () => {\n        const titleInput = this.state.title.trim()\n        if (titleInput.length === 0) {\n            return \"Title is required.\"\n        } else if (titleInput.length < 3) {\n            return \"Title must be atleast 3 characters long.\"\n        }\n    }\n\n    subHandle = (e, value) => {\n        e.preventDefault();\n        let time = (3600000 * this.state.hour) + (60000 * this.state.min)\n        let newPlaylist = {\n            title: this.state.title.trim(),\n            length: time,\n            genre_id: this.state.selectedId,\n            author: 1\n        }\n\n\n        fetch(`${config.ENDPOINT}/playlists`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(newPlaylist),\n        })\n            .then(res => {\n                if (!res.ok)\n                    return res.json().then(e => Promise.reject(e))\n                return res.json()\n            })\n            .then(res => {\n\n                value.pageUpdate()\n                this.props.history.push(`/playlist-display/${res.id}`,\n                    {\n                        genres: value.genres,\n                        time: time\n                    }\n                )\n            })\n            .catch(error => {\n                console.error({ error })\n            })\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    render() {\n\n        return (\n            <PlaylistContext.Consumer>\n                {(value) => {\n\n                    let genres = value.genres.map(genre =>\n                        <GenreCheck id={genre.id} name={genre.name} selected={this.state.selectedGen} key={genre.id} />\n                    )\n\n                    let minutes = this.minArr().map(min => {\n                        if (min < 10)\n                            return <option value={min} key={min}>0{min}</option>\n                        else\n                            return <option value={min} key={min}>{min}</option>\n                    })\n\n                    let hours = this.hourArr().map(min => {\n                        return <option value={min} key={min}>{min}</option>\n                    })\n\n                    const timeError = this.validateTime()\n                    const genreError = this.validateGenre()\n                    const titleError = this.validateTitle()\n\n                    return genres && (\n                        <div id=\"play-stage\">\n                            <form>\n                                <div id=\"input-wrap\">\n                                    <div className=\"inputs\">\n                                        <label htmlFor=\"title-input\">Playlist Name: </label>\n                                        <input type=\"text\" id=\"title-input\" onChange={this.titleChange} className=\"user-inputs\" />\n                                        {this.state.titleTouch && <ValidationError message={titleError} />}\n                                    </div>\n                                    <div className=\"inputs\">\n                                        <label htmlFor=\"hour-length\">Playlist length: </label>\n                                        <select onChange={this.hourChange} className=\"user-inputs\">\n                                            <option value={null}>--Hour(s)--</option>\n                                            {hours}\n                                        </select>\n                                    :\n                                    <select onChange={this.minChange} className=\"user-inputs\">\n                                            <option value={null}>--Minute(s)--</option>\n                                            {minutes}\n                                        </select>\n                                        {(this.state.hourTouch && this.state.minTouch) && <ValidationError message={timeError} />}\n                                    </div>\n                                </div>\n                                <fieldset onChange={this.fieldChange}>\n                                    <legend>Choose your genre!</legend>\n                                    {(this.state.genTouch && <ValidationError message={genreError} />)}\n                                    <div id=\"genres\">\n                                        {genres}\n                                    </div>\n                                </fieldset>\n                                <button type=\"submit\" id=\"create\" onClick={e => this.subHandle(e, value)} disabled={timeError || genreError || titleError}>Create your playlist!</button>\n                            </form>\n                            <Link to={'/playlist-display/3'} >Here</Link>\n                        </div>\n                    )\n                }\n                }\n            </PlaylistContext.Consumer >\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}