{"ast":null,"code":"var _jsxFileName = \"/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport config from './config';\n\nrequire('dotenv').config();\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      genres: [],\n      error: null\n    };\n\n    this.setGenres = genres => {\n      this.setState({\n        genres,\n        error: null\n      });\n    };\n  }\n\n  componentDidMount() {\n    let endpoint = config.ENDPOINT;\n    Promise.all([fetch(endpoint), fetch(endpoint + '/genres')], {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(([apiKeyRes, genreRes]) => {\n      if (!apiKeyRes.ok) return apiKeyRes.json().then(error => Promise.reject(error));\n      if (!genreRes.ok) return genreRes.json().then(error => Promise.reject(error));\n      return Promise.all([apiKeyRes.json(), genreRes.json()]);\n    }).then(([apiKey, genres]) => {\n      this.setGenres(genres);\n      process.env['API_KEY'] = apiKey.key;\n      console.log(this.state.genres);\n      console.log(apiKey.key);\n    }).catch(error => {\n      console.error({\n        error\n      });\n      this.setState({\n        error\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"Edit \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 18\n      }\n    }, \"src/App.js\"), \" and save to reload.\"), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"App-link\",\n      href: \"https://reactjs.org\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Learn React\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/App.js"],"names":["React","Component","Route","config","require","App","state","genres","error","setGenres","setState","componentDidMount","endpoint","ENDPOINT","Promise","all","fetch","method","headers","then","apiKeyRes","genreRes","ok","json","reject","apiKey","process","env","key","console","log","catch","render","logo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport config from './config';\nrequire('dotenv').config();\n\n\nclass App extends Component {\n  state = {\n    genres: [],\n    error: null,\n  }\n\n  setGenres = genres => {\n    this.setState({\n      genres,\n      error: null,\n    })\n  }\n\n  componentDidMount() {\n    let endpoint = config.ENDPOINT\n    Promise.all([\n      fetch(endpoint),\n      fetch(endpoint + '/genres')\n    ],\n      {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n        },\n      })\n      .then(([apiKeyRes, genreRes]) => {\n        if (!apiKeyRes.ok)\n          return apiKeyRes.json().then(error => Promise.reject(error))\n        if (!genreRes.ok)\n          return genreRes.json().then(error => Promise.reject(error))\n        return Promise.all([apiKeyRes.json(), genreRes.json()])\n      })\n      .then(([apiKey, genres]) => {\n        this.setGenres(genres)\n        process.env['API_KEY'] = apiKey.key\n        console.log(this.state.genres)\n        console.log(apiKey.key)\n      })\n      .catch(error => {\n        console.error({ error });\n        this.setState({ error })\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n        </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n        </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}