{"ast":null,"code":"var _jsxFileName = \"/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport './App.css';\nimport config from './config';\nimport PlaylistContext from './PlaylistContext';\nimport Landing from './Landingpage/Landing';\nimport Homepage from './Homepage/Homepage';\nimport PlaylistDisplay from './Playlists/Playlist-Display';\nimport ExistingPlaylist from './Playlists/Existing-Playlists';\nimport genreStore from './genreStore';\nimport playStore from './playStore';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      genres: [],\n      playlists: [],\n      // records: [],\n      user: null,\n      error: null\n    };\n\n    this.setGenres = genres => {\n      this.setState({\n        genres\n      });\n    };\n\n    this.setPlaylists = playlists => {\n      this.setState({\n        playlists\n      });\n    };\n\n    this.fetcher = () => {// let endpoint = config.ENDPOINT\n      // Promise.all([\n      //   fetch(endpoint + '/playlists'),\n      //   fetch(endpoint + '/genres'),\n      //   fetch(endpoint + '/auth')\n      // ],\n      //   {\n      //     method: 'GET',\n      //     headers: {\n      //       'content-type': 'application/json',\n      //     },\n      //   })\n      //   .then(([playlistRes, genreRes, authRes]) => {\n      //     if (!playlistRes.ok)\n      //       return playlistRes.json().then(error => Promise.reject(error))\n      //     if (!genreRes.ok)\n      //       return genreRes.json().then(error => Promise.reject(error))\n      //     if (!authRes.ok)\n      //       return authRes.json().then(error => Promise.reject(error))\n      //     return Promise.all([playlistRes.json(), genreRes.json(), authRes.json()])\n      //   })\n      //   .then(([playlist, genres, auth]) => {\n      //     this.setPlaylists(playlist)\n      //     this.setGenres(genres)\n      //     console.log(auth)\n      //   })\n      //   .catch(error => {\n      //     console.error({ error });\n      //   });\n    };\n  }\n\n  componentDidMount() {} // this.fetcher()\n  // pageUpdate = () => {\n  //   this.componentDidMount()\n  // }\n\n\n  render() {\n    const contextValue = {\n      genres: genreStore,\n      playlists: playStore,\n      pageUpdate: this.fetcher\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: '/',\n      id: \"home-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"ShowTunes\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(PlaylistContext.Provider, {\n      value: contextValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      id: \"stage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Landing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/homepage\",\n      component: Homepage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/existing-playlists\",\n      component: ExistingPlaylist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/playlist-display/:playlistId\",\n      component: PlaylistDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/App.js"],"names":["React","Component","Route","Link","Switch","config","PlaylistContext","Landing","Homepage","PlaylistDisplay","ExistingPlaylist","genreStore","playStore","App","state","genres","playlists","user","error","setGenres","setState","setPlaylists","fetcher","componentDidMount","render","contextValue","pageUpdate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport './App.css';\nimport config from './config';\nimport PlaylistContext from './PlaylistContext'\nimport Landing from './Landingpage/Landing'\nimport Homepage from './Homepage/Homepage'\nimport PlaylistDisplay from './Playlists/Playlist-Display'\nimport ExistingPlaylist from './Playlists/Existing-Playlists'\nimport genreStore from './genreStore'\nimport playStore from './playStore'\n\nclass App extends Component {\n\n  state = {\n    genres: [],\n    playlists: [],\n    // records: [],\n    user: null,\n    error: null,\n  }\n\n  setGenres = genres => {\n    this.setState({\n      genres\n    })\n  }\n\n  setPlaylists = playlists => {\n    this.setState({\n      playlists\n    })\n  }\n\n  fetcher = () => {\n    // let endpoint = config.ENDPOINT\n    // Promise.all([\n    //   fetch(endpoint + '/playlists'),\n    //   fetch(endpoint + '/genres'),\n\n    //   fetch(endpoint + '/auth')\n    // ],\n    //   {\n    //     method: 'GET',\n    //     headers: {\n    //       'content-type': 'application/json',\n    //     },\n    //   })\n    //   .then(([playlistRes, genreRes, authRes]) => {\n    //     if (!playlistRes.ok)\n    //       return playlistRes.json().then(error => Promise.reject(error))\n    //     if (!genreRes.ok)\n    //       return genreRes.json().then(error => Promise.reject(error))\n    //     if (!authRes.ok)\n    //       return authRes.json().then(error => Promise.reject(error))\n    //     return Promise.all([playlistRes.json(), genreRes.json(), authRes.json()])\n    //   })\n    //   .then(([playlist, genres, auth]) => {\n    //     this.setPlaylists(playlist)\n    //     this.setGenres(genres)\n    //     console.log(auth)\n    //   })\n    //   .catch(error => {\n    //     console.error({ error });\n    //   });\n  }\n\n  componentDidMount() {\n    // this.fetcher()\n  }\n\n  // pageUpdate = () => {\n  //   this.componentDidMount()\n  // }\n\n  render() {\n    const contextValue = {\n      genres: genreStore,\n      playlists: playStore,\n      pageUpdate: this.fetcher,\n    }\n\n    return (\n      <div className=\"App\" >\n        <header className=\"App-header\">\n          <Link to={'/'} id=\"home-link\">\n            <h1>ShowTunes</h1>\n          </Link>\n          <hr />\n        </header>\n        <PlaylistContext.Provider value={contextValue}>\n          <main id=\"stage\">\n            <Switch>\n              <Route exact path='/' component={Landing} />\n              <Route path='/homepage' component={Homepage} />\n              <Route path='/existing-playlists' component={ExistingPlaylist} />\n              <Route path='/playlist-display/:playlistId' component={PlaylistDisplay} />\n            </Switch>\n          </main>\n        </PlaylistContext.Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}