{"ast":null,"code":"var _jsxFileName = \"/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Playlists/Song.js\";\nimport React from 'react';\nimport './Song.css';\nimport { Link } from 'react-router-dom';\nimport PlaylistContext from '../PlaylistContext';\nimport PropTypes from 'prop-types';\nimport config from '../config';\nexport default function Song(props) {\n  // let date = <Moment format=\"Do of MMM YYYY\">\n  //     {props.mod}\n  // </Moment>\n  let handleClickDelete = value => {\n    const noteId = props.id;\n    fetch(`${config.note_end}/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(res => {\n      if (!res.ok) return res.json().then(e => Promise.reject(e)); // return res.json()\n    }).then(() => {\n      value.deleteNote(noteId);\n    }).catch(error => {\n      console.error({\n        error\n      });\n    });\n    if (props.history) props.history.push('/');\n  };\n\n  let msConverter = length => {\n    var min = Math.floor(length / 60000);\n    var sec = (length % 60000 / 1000).toFixed(0);\n    return min + \":\" + (sec < 10 ? '0' : '') + sec;\n  };\n\n  let timeOut = msConverter(props.track.length);\n  return (\n    /*#__PURE__*/\n    // <NoteContext.Consumer>\n    // {(value) => {\n    // return (\n    React.createElement(\"div\", {\n      className: \"song-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      target: \"_blank\",\n      href: props.track.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, props.track.title)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, timeOut)) // )\n    // }\n    // }\n    // </NoteContext.Consumer>\n\n  );\n} // Note.propTypes = {\n//     id: PropTypes.number,\n//     name: PropTypes.string,\n//     content: PropTypes.string,\n//     mod: PropTypes.string,\n// }","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Playlists/Song.js"],"names":["React","Link","PlaylistContext","PropTypes","config","Song","props","handleClickDelete","value","noteId","id","fetch","note_end","method","headers","then","res","ok","json","e","Promise","reject","deleteNote","catch","error","console","history","push","msConverter","length","min","Math","floor","sec","toFixed","timeOut","track","url","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAChC;AACA;AACA;AAEA,MAAIC,iBAAiB,GAAIC,KAAD,IAAW;AAC/B,UAAMC,MAAM,GAAGH,KAAK,CAACI,EAArB;AACAC,IAAAA,KAAK,CAAE,GAAEP,MAAM,CAACQ,QAAS,IAAGH,MAAO,EAA9B,EAAiC;AAClCI,MAAAA,MAAM,EAAE,QAD0B;AAElCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAFyB,KAAjC,CAAL,CAMKC,IANL,CAMUC,GAAG,IAAI;AACT,UAAI,CAACA,GAAG,CAACC,EAAT,EACI,OAAOD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBI,CAAC,IAAIC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAArB,CAAP,CAFK,CAGT;AACH,KAVL,EAWKJ,IAXL,CAWU,MAAM;AACRP,MAAAA,KAAK,CAACc,UAAN,CAAiBb,MAAjB;AACH,KAbL,EAcKc,KAdL,CAcWC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc;AAAEA,QAAAA;AAAF,OAAd;AACH,KAhBL;AAkBA,QAAIlB,KAAK,CAACoB,OAAV,EACIpB,KAAK,CAACoB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACP,GAtBD;;AAwBA,MAAIC,WAAW,GAAIC,MAAD,IAAY;AAC1B,QAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAG,KAApB,CAAV;AACA,QAAII,GAAG,GAAG,CAAEJ,MAAM,GAAG,KAAV,GAAmB,IAApB,EAA0BK,OAA1B,CAAkC,CAAlC,CAAV;AACA,WAAOJ,GAAG,GAAG,GAAN,IAAaG,GAAG,GAAG,EAAN,GAAW,GAAX,GAAiB,EAA9B,IAAoCA,GAA3C;AACH,GAJD;;AAMA,MAAIE,OAAO,GAAGP,WAAW,CAACtB,KAAK,CAAC8B,KAAN,CAAYP,MAAb,CAAzB;AACA;AAAA;AACI;AACA;AACA;AACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAG,MAAA,MAAM,EAAC,QAAV;AAAmB,MAAA,IAAI,EAAEvB,KAAK,CAAC8B,KAAN,CAAYC,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK/B,KAAK,CAAC8B,KAAN,CAAYE,KAAjB,CADJ,CAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,OAAJ,CALJ,CAJJ,CAcI;AACA;AACA;AACA;;AAjBJ;AAmBH,C,CAED;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport './Song.css'\nimport { Link } from 'react-router-dom'\nimport PlaylistContext from '../PlaylistContext'\nimport PropTypes from 'prop-types'\nimport config from '../config'\n\nexport default function Song(props) {\n    // let date = <Moment format=\"Do of MMM YYYY\">\n    //     {props.mod}\n    // </Moment>\n\n    let handleClickDelete = (value) => {\n        const noteId = props.id\n        fetch(`${config.note_end}/${noteId}`, {\n            method: 'DELETE',\n            headers: {\n                'content-type': 'application/json'\n            },\n        })\n            .then(res => {\n                if (!res.ok)\n                    return res.json().then(e => Promise.reject(e))\n                // return res.json()\n            })\n            .then(() => {\n                value.deleteNote(noteId)\n            })\n            .catch(error => {\n                console.error({ error })\n            })\n\n        if (props.history)\n            props.history.push('/')\n    }\n\n    let msConverter = (length) => {\n        var min = Math.floor(length / 60000);\n        var sec = ((length % 60000) / 1000).toFixed(0);\n        return min + \":\" + (sec < 10 ? '0' : '') + sec;\n    }\n\n    let timeOut = msConverter(props.track.length)\n    return (\n        // <NoteContext.Consumer>\n        // {(value) => {\n        // return (\n        <div className=\"song-item\">\n            {/* <Link to={} className=\"title\"> */}\n            <a target='_blank' href={props.track.url}>\n                <h2>{props.track.title}</h2>\n            </a>\n            <p>{timeOut}</p>\n            {/* </Link> */}\n            {/* <p>{\"Date modified on \"}{date}</p> */}\n            {/* <button className=\"delete\" onClick={() => handleClickDelete(value)}>Delete Note</button> */}\n        </div>\n        // )\n        // }\n        // }\n        // </NoteContext.Consumer>\n    )\n}\n\n// Note.propTypes = {\n//     id: PropTypes.number,\n//     name: PropTypes.string,\n//     content: PropTypes.string,\n//     mod: PropTypes.string,\n// } \n"]},"metadata":{},"sourceType":"module"}