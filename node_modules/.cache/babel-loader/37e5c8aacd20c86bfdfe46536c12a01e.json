{"ast":null,"code":"var _jsxFileName = \"/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Homepage/Homepage.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PlaylistContext from '../PlaylistContext';\nimport './Homepage.css';\nimport GenreCheck from './GenreCheck';\nimport ValidationError from '../ValidationError';\nexport default class HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clickStore = (e, status) => {\n      if (!status) this.setState({\n        selected: [...this.state.selected, e.target.value]\n      });else {\n        let temp = this.state.selected.filter(item => {\n          if (item !== e.target.value) return item;\n        });\n        this.setState({\n          selected: temp\n        });\n      }\n    };\n\n    this.nameChange = e => {\n      this.setState({\n        name: parseInt(e.target.value),\n        nameTouch: true\n      });\n    };\n\n    this.minChange = e => {\n      this.setState({\n        min: parseInt(e.target.value),\n        minTouch: true\n      });\n    };\n\n    this.hourChange = e => {\n      this.setState({\n        hour: parseInt(e.target.value),\n        hourTouch: true\n      });\n    };\n\n    this.minArr = () => {\n      let arr = new Array(60);\n\n      for (let i = 0; i <= 59; i++) arr[i] = i;\n\n      return arr;\n    };\n\n    this.hourArr = () => {\n      let arr = new Array(4);\n\n      for (let i = 0; i <= 2; i++) arr[i] = i;\n\n      return arr;\n    };\n\n    this.validateTime = () => {\n      const hourSelect = this.state.hour;\n      const minSelect = this.state.min;\n      if (hourSelect === null && minSelect === null) return \"Select a valid time\";\n    };\n\n    this.subHandle = e => {\n      e.preventDefault();\n    };\n\n    this.state = {\n      name: \"\",\n      nameTouch: false,\n      selected: [],\n      hour: null,\n      hourTouch: false,\n      min: null,\n      minTouch: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(PlaylistContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, value => {\n      let genres = value.genres.map(genre => /*#__PURE__*/React.createElement(GenreCheck, {\n        id: genre.id,\n        name: genre.name,\n        key: genre.id,\n        clickE: this.clickStore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }));\n      let minutes = this.minArr().map(min => {\n        if (min < 10) return /*#__PURE__*/React.createElement(\"option\", {\n          value: min,\n          key: min,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 36\n          }\n        }, \"0\", min);else return /*#__PURE__*/React.createElement(\"option\", {\n          value: min,\n          key: min,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 36\n          }\n        }, min);\n      });\n      let hours = this.hourArr().map(min => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: min,\n          key: min,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 32\n          }\n        }, min);\n      });\n      return genres && /*#__PURE__*/React.createElement(\"div\", {\n        id: \"play-stage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"input-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inputs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"name-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 41\n        }\n      }, \"Playlist Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"name-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inputs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"hour-length\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 41\n        }\n      }, \"Playlist length: \"), /*#__PURE__*/React.createElement(\"select\", {\n        onChange: this.hourChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 45\n        }\n      }, \"--Hour(s)--\"), hours), \":\", /*#__PURE__*/React.createElement(\"select\", {\n        onChange: this.minChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 45\n        }\n      }, \"--Minute(s)--\"), minutes), this.state.hourTouch && this.state.minTouch && /*#__PURE__*/React.createElement(ValidationError, {\n        message: selectError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 89\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"genres\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 33\n        }\n      }, genres), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        id: \"create\",\n        onClick: this.subHandle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 33\n        }\n      }, \"Create your playlist!\")));\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Homepage/Homepage.js"],"names":["React","Component","Link","PlaylistContext","GenreCheck","ValidationError","HomePage","constructor","props","clickStore","e","status","setState","selected","state","target","value","temp","filter","item","nameChange","name","parseInt","nameTouch","minChange","min","minTouch","hourChange","hour","hourTouch","minArr","arr","Array","i","hourArr","validateTime","hourSelect","minSelect","subHandle","preventDefault","render","genres","map","genre","id","minutes","hours","selectError"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PlaylistContext from '../PlaylistContext'\nimport './Homepage.css'\nimport GenreCheck from './GenreCheck'\nimport ValidationError from '../ValidationError'\n\n\nexport default class HomePage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: \"\",\n            nameTouch: false,\n            selected: [],\n            hour: null,\n            hourTouch: false,\n            min: null,\n            minTouch: false,\n        }\n    }\n\n    clickStore = (e, status) => {\n        if (!status)\n            this.setState({ selected: [...this.state.selected, e.target.value] })\n        else {\n            let temp = this.state.selected.filter(item => {\n                if (item !== e.target.value)\n                    return item\n            })\n            this.setState({ selected: temp })\n        }\n\n    }\n\n    nameChange = (e) => {\n        this.setState({\n            name: parseInt(e.target.value),\n            nameTouch: true\n        })\n    }\n\n    minChange = (e) => {\n        this.setState({\n            min: parseInt(e.target.value),\n            minTouch: true\n        })\n    }\n\n    hourChange = (e) => {\n        this.setState({\n            hour: parseInt(e.target.value),\n            hourTouch: true\n        })\n    }\n\n    minArr = () => {\n        let arr = new Array(60);\n        for (let i = 0; i <= 59; i++)\n            arr[i] = i\n\n        return arr\n    }\n\n    hourArr = () => {\n        let arr = new Array(4);\n        for (let i = 0; i <= 2; i++)\n            arr[i] = i\n        return arr\n    }\n\n    validateTime = () => {\n        const hourSelect = this.state.hour\n        const minSelect = this.state.min\n        if ((hourSelect === null) && (minSelect === null))\n            return \"Select a valid time\"\n    }\n\n    subHandle = (e) => {\n        e.preventDefault();\n\n    }\n\n    render() {\n\n        return (\n            <PlaylistContext.Consumer>\n                {(value) => {\n\n                    let genres = value.genres.map(genre =>\n                        <GenreCheck id={genre.id} name={genre.name} key={genre.id} clickE={this.clickStore} />\n                    )\n\n                    let minutes = this.minArr().map(min => {\n                        if (min < 10)\n                            return <option value={min} key={min}>0{min}</option>\n                        else\n                            return <option value={min} key={min}>{min}</option>\n                    })\n\n                    let hours = this.hourArr().map(min => {\n                        return <option value={min} key={min}>{min}</option>\n                    })\n\n\n                    return genres && (\n                        <div id=\"play-stage\">\n                            <form>\n                                <div id=\"input-wrap\">\n                                    <div className=\"inputs\">\n                                        <label htmlFor=\"name-input\">Playlist Name: </label>\n                                        <input type=\"text\" id=\"name-input\" />\n                                    </div>\n                                    <div className=\"inputs\">\n                                        <label htmlFor=\"hour-length\">Playlist length: </label>\n                                        <select onChange={this.hourChange}>\n                                            <option value={null}>--Hour(s)--</option>\n                                            {hours}\n                                        </select>\n                                    :\n                                    <select onChange={this.minChange}>\n                                            <option value={null}>--Minute(s)--</option>\n                                            {minutes}\n                                        </select>\n                                        {this.state.hourTouch && this.state.minTouch && <ValidationError message={selectError} />}\n                                    </div>\n                                </div>\n                                <div id=\"genres\">\n                                    {genres}\n                                    {}\n                                </div>\n                                <button type=\"submit\" id=\"create\" onClick={this.subHandle}>Create your playlist!</button>\n                            </form>\n                        </div>\n                    )\n                }\n                }\n            </PlaylistContext.Consumer >\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}