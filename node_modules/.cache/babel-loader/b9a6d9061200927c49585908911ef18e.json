{"ast":null,"code":"var _jsxFileName = \"/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Homepage/Homepage.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PlaylistContext from '../PlaylistContext';\nimport './Homepage.css';\nimport GenreCheck from './GenreCheck';\nexport default class HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clickStore = (e, status) => {\n      if (!status) this.setState({\n        selected: [...this.state.selected, e.target.value]\n      });else {\n        let temp = this.state.selected.filter(item => {\n          if (item !== e.target.value) return item;\n        });\n        this.setState({\n          selected: temp\n        });\n      }\n    };\n\n    this.minChange = e => {\n      if (e.target.value.length === 1) e.target.value = '0' + e.target.value;\n      this.setState({\n        min: parseInt(e.target.value)\n      });\n    };\n\n    this.hourChange = e => {\n      this.setState({\n        hour: parseInt(e.target.value)\n      });\n    };\n\n    this.minArr = () => {\n      let arr = new Array(60);\n\n      for (let i = 0; i <= 59; i++) arr[i] = i;\n\n      return arr;\n    };\n\n    this.hourArr = () => {\n      let arr = new Array(4);\n\n      for (let i = 0; i <= 2; i++) arr[i] = i;\n\n      return arr;\n    };\n\n    this.state = {\n      selected: [],\n      hour: 1,\n      min: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(PlaylistContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, value => {\n      let genres = value.genres.map(genre => /*#__PURE__*/React.createElement(GenreCheck, {\n        id: genre.id,\n        name: genre.name,\n        key: genre.id,\n        clickE: this.clickStore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }));\n      let minutes = this.minArr().map(min => {\n        if (min < 10) return /*#__PURE__*/React.createElement(\"option\", {\n          value: min,\n          key: min,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 36\n          }\n        }, \"0\", min);else return /*#__PURE__*/React.createElement(\"option\", {\n          value: min,\n          key: min,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 36\n          }\n        }, min);\n      });\n      let hours = this.hourArr().map(min => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: min,\n          key: min,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 32\n          }\n        }, min);\n      });\n      return genres && /*#__PURE__*/React.createElement(\"div\", {\n        id: \"play-stage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"input-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inputs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"name-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 41\n        }\n      }, \"Playlist Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"name-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inputs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"hour-length\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 41\n        }\n      }, \"Playlist length: \"), /*#__PURE__*/React.createElement(\"select\", {\n        onChange: this.hourChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 45\n        }\n      }, \"--Hour(s)--\"), hours), \":\", /*#__PURE__*/React.createElement(\"select\", {\n        onChange: this.minChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 45\n        }\n      }, \"--Minute(s)--\"), minutes))), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"genres\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 33\n        }\n      }, genres), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 33\n        }\n      }, \"Create your playlist!\")));\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/Nas/Desktop/Thinkful/playlist-maker-app/src/Homepage/Homepage.js"],"names":["React","Component","Link","PlaylistContext","GenreCheck","HomePage","constructor","props","clickStore","e","status","setState","selected","state","target","value","temp","filter","item","minChange","length","min","parseInt","hourChange","hour","minArr","arr","Array","i","hourArr","render","genres","map","genre","id","name","minutes","hours"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PlaylistContext from '../PlaylistContext'\nimport './Homepage.css'\nimport GenreCheck from './GenreCheck'\n\n\nexport default class HomePage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            selected: [],\n            hour: 1,\n            min: 0,\n        }\n    }\n\n    clickStore = (e, status) => {\n        if (!status)\n            this.setState({ selected: [...this.state.selected, e.target.value] })\n        else {\n            let temp = this.state.selected.filter(item => {\n                if (item !== e.target.value)\n                    return item\n            })\n            this.setState({ selected: temp })\n        }\n\n    }\n\n    minChange = (e) => {\n        if (e.target.value.length === 1)\n            e.target.value = '0' + e.target.value;\n        this.setState({\n            min: parseInt(e.target.value)\n        })\n    }\n\n    hourChange = (e) => {\n        this.setState({\n            hour: parseInt(e.target.value)\n        })\n    }\n\n    minArr = () => {\n        let arr = new Array(60);\n        for (let i = 0; i <= 59; i++)\n            arr[i] = i\n\n        return arr\n    }\n\n    hourArr = () => {\n        let arr = new Array(4);\n        for (let i = 0; i <= 2; i++)\n            arr[i] = i\n        return arr\n    }\n\n    render() {\n\n        return (\n            <PlaylistContext.Consumer>\n                {(value) => {\n\n                    let genres = value.genres.map(genre =>\n                        <GenreCheck id={genre.id} name={genre.name} key={genre.id} clickE={this.clickStore} />\n                    )\n\n                    let minutes = this.minArr().map(min => {\n                        if (min < 10)\n                            return <option value={min} key={min}>0{min}</option>\n                        else\n                            return <option value={min} key={min}>{min}</option>\n                    })\n\n                    let hours = this.hourArr().map(min => {\n                        return <option value={min} key={min}>{min}</option>\n                    })\n\n\n                    return genres && (\n                        <div id=\"play-stage\">\n                            <form>\n                                <div id=\"input-wrap\">\n                                    <div className=\"inputs\">\n                                        <label htmlFor=\"name-input\">Playlist Name: </label>\n                                        <input type=\"text\" id=\"name-input\" />\n                                    </div>\n                                    <div className=\"inputs\">\n                                        <label htmlFor=\"hour-length\">Playlist length: </label>\n                                        <select onChange={this.hourChange}>\n                                            <option value={null}>--Hour(s)--</option>\n                                            {hours}\n                                        </select>\n                                    :\n                                    <select onChange={this.minChange}>\n                                            <option value={null}>--Minute(s)--</option>\n                                            {minutes}\n                                        </select>\n                                    </div>\n                                </div>\n                                <div id=\"genres\">\n                                    {genres}\n                                </div>\n                                <button type=\"submit\">Create your playlist!</button>\n                            </form>\n                        </div>\n                    )\n                }\n                }\n            </PlaylistContext.Consumer >\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}